"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[7554],{15680:(e,n,t)=>{t.d(n,{xA:()=>p,yg:()=>c});var a=t(96540);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function r(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?r(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,a,o=function(e,n){if(null==e)return{};var t,a,o={},r=Object.keys(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var i=a.createContext({}),g=function(e){var n=a.useContext(i),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},p=function(e){var n=g(e.components);return a.createElement(i.Provider,{value:n},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},d=a.forwardRef((function(e,n){var t=e.components,o=e.mdxType,r=e.originalType,i=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),u=g(t),d=o,c=u["".concat(i,".").concat(d)]||u[d]||m[d]||r;return t?a.createElement(c,l(l({ref:n},p),{},{components:t})):a.createElement(c,l({ref:n},p))}));function c(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var r=t.length,l=new Array(r);l[0]=d;var s={};for(var i in n)hasOwnProperty.call(n,i)&&(s[i]=n[i]);s.originalType=e,s[u]="string"==typeof e?e:o,l[1]=s;for(var g=2;g<r;g++)l[g]=t[g];return a.createElement.apply(null,l)}return a.createElement.apply(null,t)}d.displayName="MDXCreateElement"},66880:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>p,contentTitle:()=>i,default:()=>c,frontMatter:()=>s,metadata:()=>g,toc:()=>u});var a=t(58168),o=t(98587),r=(t(96540),t(15680)),l=["components"],s={id:"maintain-guides-how-to-monitor-your-node",title:"Monitor your node",sidebar_label:"Monitor your node",descriptions:"Tips on how to monitor your node.",keywords:["node","monitor","dashboard"],slug:"../maintain-guides-how-to-monitor-your-node"},i=void 0,g={unversionedId:"maintain/maintain-guides-how-to-monitor-your-node",id:"maintain/maintain-guides-how-to-monitor-your-node",title:"Monitor your node",description:"This guide will walk you through how to set up Prometheus with",source:"@site/../docs/maintain/maintain-guides-how-to-monitor-your-node.md",sourceDirName:"maintain",slug:"/maintain-guides-how-to-monitor-your-node",permalink:"/docs/maintain-guides-how-to-monitor-your-node",draft:!1,tags:[],version:"current",lastUpdatedBy:"github-actions[bot]",lastUpdatedAt:1724683517,formattedLastUpdatedAt:"Aug 26, 2024",frontMatter:{id:"maintain-guides-how-to-monitor-your-node",title:"Monitor your node",sidebar_label:"Monitor your node",descriptions:"Tips on how to monitor your node.",keywords:["node","monitor","dashboard"],slug:"../maintain-guides-how-to-monitor-your-node"}},p={},u=[{value:"Preparation",id:"preparation",level:2},{value:"Installing and Configuring Prometheus",id:"installing-and-configuring-prometheus",level:2},{value:"Starting Prometheus",id:"starting-prometheus",level:2},{value:"Installing Grafana",id:"installing-grafana",level:2},{value:"Installing and Configuring Alertmanager (Optional)",id:"installing-and-configuring-alertmanager-optional",level:2},{value:"Gmail Setup",id:"gmail-setup",level:3},{value:"AlertManager Configuration",id:"alertmanager-configuration",level:3},{value:"AlertManager Integration",id:"alertmanager-integration",level:3}],m={toc:u},d="wrapper";function c(e){var n=e.components,s=(0,o.A)(e,l);return(0,r.yg)(d,(0,a.A)({},m,s,{components:n,mdxType:"MDXLayout"}),(0,r.yg)("p",null,"This guide will walk you through how to set up ",(0,r.yg)("a",{parentName:"p",href:"https://prometheus.io/"},"Prometheus")," with\n",(0,r.yg)("a",{parentName:"p",href:"https://grafana.com/"},"Grafana")," to monitor your node using Ubuntu 18.04 or 20.04."),(0,r.yg)("p",null,"A Substrate-based chain exposes data such as the height of the chain, the number of connected peers\nto your node, CPU, memory usage of your machine, and more. To monitor this data, Prometheus is used\nto collect metrics and Grafana allows for displaying them on the dashboard."),(0,r.yg)("h2",{id:"preparation"},"Preparation"),(0,r.yg)("p",null,"First, create a user for Prometheus by adding the ",(0,r.yg)("inlineCode",{parentName:"p"},"--no-create-home")," flag to disallow ",(0,r.yg)("inlineCode",{parentName:"p"},"prometheus"),"\nfrom logging in."),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-bash"},"sudo useradd --no-create-home --shell /usr/sbin/nologin prometheus\n")),(0,r.yg)("p",null,"Create the directories required to store the configuration and executable files."),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-bash"},"sudo mkdir /etc/prometheus\nsudo mkdir /var/lib/prometheus\n")),(0,r.yg)("p",null,"Change the ownership of these directories to ",(0,r.yg)("inlineCode",{parentName:"p"},"prometheus")," so that only prometheus can access them."),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-bash"},"sudo chown -R prometheus:prometheus /etc/prometheus\nsudo chown -R prometheus:prometheus /var/lib/prometheus\n")),(0,r.yg)("h2",{id:"installing-and-configuring-prometheus"},"Installing and Configuring Prometheus"),(0,r.yg)("p",null,"After setting up the environment, update your OS, and install the latest Prometheus. You can check\nthe latest release by going to their GitHub repository under the\n",(0,r.yg)("a",{parentName:"p",href:"https://github.com/prometheus/prometheus/releases/"},"releases")," page."),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-bash"},"sudo apt-get update && apt-get upgrade\nwget https://github.com/prometheus/prometheus/releases/download/v2.26.0/prometheus-2.26.0.linux-amd64.tar.gz\ntar xfz prometheus-*.tar.gz\ncd prometheus-2.26.0.linux-amd64\n")),(0,r.yg)("p",null,"The following two binaries are in the directory:"),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},"prometheus - Prometheus main binary file"),(0,r.yg)("li",{parentName:"ul"},"promtool")),(0,r.yg)("p",null,"The following two directories (which contain the web interface, configuration files examples and the\nlicense) are in the directory:"),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},"consoles"),(0,r.yg)("li",{parentName:"ul"},"console_libraries")),(0,r.yg)("p",null,"Copy the executable files to the ",(0,r.yg)("inlineCode",{parentName:"p"},"/usr/local/bin/")," directory."),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-bash"},"sudo cp ./prometheus /usr/local/bin/\nsudo cp ./promtool /usr/local/bin/\n")),(0,r.yg)("p",null,"Change the ownership of these files to the ",(0,r.yg)("inlineCode",{parentName:"p"},"prometheus")," user."),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-bash"},"sudo chown prometheus:prometheus /usr/local/bin/prometheus\nsudo chown prometheus:prometheus /usr/local/bin/promtool\n")),(0,r.yg)("p",null,"Copy the ",(0,r.yg)("inlineCode",{parentName:"p"},"consoles")," and ",(0,r.yg)("inlineCode",{parentName:"p"},"console_libraries")," directories to ",(0,r.yg)("inlineCode",{parentName:"p"},"/etc/prometheus")),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-bash"},"sudo cp -r ./consoles /etc/prometheus\nsudo cp -r ./console_libraries /etc/prometheus\n")),(0,r.yg)("p",null,"Change the ownership of these directories to the ",(0,r.yg)("inlineCode",{parentName:"p"},"prometheus")," user."),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-bash"},"sudo chown -R prometheus:prometheus /etc/prometheus/consoles\nsudo chown -R prometheus:prometheus /etc/prometheus/console_libraries\n")),(0,r.yg)("p",null,"Once everything is done, run this command to remove ",(0,r.yg)("inlineCode",{parentName:"p"},"prometheus")," directory."),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-bash"},"cd .. && rm -rf prometheus*\n")),(0,r.yg)("p",null,"Before using Prometheus, it needs some configuration. Create a YAML configuration file named\n",(0,r.yg)("inlineCode",{parentName:"p"},"prometheus.yml")," by running the command below."),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-bash"},"sudo nano /etc/prometheus/prometheus.yml\n")),(0,r.yg)("p",null,"The configuration file is divided into three parts which are ",(0,r.yg)("inlineCode",{parentName:"p"},"global"),", ",(0,r.yg)("inlineCode",{parentName:"p"},"rule_files"),", and\n",(0,r.yg)("inlineCode",{parentName:"p"},"scrape_configs"),"."),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("p",{parentName:"li"},(0,r.yg)("inlineCode",{parentName:"p"},"scrape_interval")," defines how often Prometheus scrapes targets, while ",(0,r.yg)("inlineCode",{parentName:"p"},"evaluation_interval"),"\ncontrols how often the software will evaluate rules.")),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("p",{parentName:"li"},(0,r.yg)("inlineCode",{parentName:"p"},"rule_files")," block contains information of the location of any rules we want the Prometheus server\nto load.")),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("p",{parentName:"li"},(0,r.yg)("inlineCode",{parentName:"p"},"scrape_configs")," contains the information which resources Prometheus monitors."))),(0,r.yg)("p",null,"The configuration file should look like this below:"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-yaml"},'global:\n  scrape_interval: 15s\n  evaluation_interval: 15s\n\nrule_files:\n  # - "first.rules"\n  # - "second.rules"\n\nscrape_configs:\n  - job_name: "prometheus"\n    scrape_interval: 5s\n    static_configs:\n      - targets: ["localhost:9090"]\n  - job_name: "substrate_node"\n    scrape_interval: 5s\n    static_configs:\n      - targets: ["localhost:9615"]\n')),(0,r.yg)("p",null,"With the above configuration file, the first exporter is the one that Prometheus exports to monitor\nitself. As we want to have more precise information about the state of the Prometheus server we\nreduced the ",(0,r.yg)("inlineCode",{parentName:"p"},"scrape_interval")," to 5 seconds for this job. The parameters ",(0,r.yg)("inlineCode",{parentName:"p"},"static_configs")," and\n",(0,r.yg)("inlineCode",{parentName:"p"},"targets")," determine where the exporters are running. The second exporter is capturing the data from\nyour node, and the port by default is ",(0,r.yg)("inlineCode",{parentName:"p"},"9615"),"."),(0,r.yg)("p",null,"You can check the validity of this configuration file by running\n",(0,r.yg)("inlineCode",{parentName:"p"},"promtool check config /etc/prometheus/prometheus.yml"),"."),(0,r.yg)("p",null,"Save the configuration file and change the ownership of the file to ",(0,r.yg)("inlineCode",{parentName:"p"},"prometheus")," user."),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-bash"},"sudo chown prometheus:prometheus /etc/prometheus/prometheus.yml\n")),(0,r.yg)("h2",{id:"starting-prometheus"},"Starting Prometheus"),(0,r.yg)("p",null,"To test that Prometheus is set up properly, execute the following command to start it as the\n",(0,r.yg)("inlineCode",{parentName:"p"},"prometheus")," user."),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-bash"},"sudo -u prometheus /usr/local/bin/prometheus --config.file /etc/prometheus/prometheus.yml --storage.tsdb.path /var/lib/prometheus/ --web.console.templates=/etc/prometheus/consoles --web.console.libraries=/etc/prometheus/console_libraries\n")),(0,r.yg)("p",null,"The following messages indicate the status of the server. If you see the following messages, your\nserver is set up properly."),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-bash"},'level=info ts=2021-04-16T19:02:20.167Z caller=main.go:380 msg="No time or size retention was set so using the default time retention" duration=15d\nlevel=info ts=2021-04-16T19:02:20.167Z caller=main.go:418 msg="Starting Prometheus" version="(version=2.26.0, branch=HEAD, revision=3cafc58827d1ebd1a67749f88be4218f0bab3d8d)"\nlevel=info ts=2021-04-16T19:02:20.167Z caller=main.go:423 build_context="(go=go1.16.2, user=root@a67cafebe6d0, date=20210331-11:56:23)"\nlevel=info ts=2021-04-16T19:02:20.167Z caller=main.go:424 host_details="(Linux 5.4.0-42-generic #46-Ubuntu SMP Fri Jul 10 00:24:02 UTC 2020 x86_64 ubuntu2004 (none))"\nlevel=info ts=2021-04-16T19:02:20.167Z caller=main.go:425 fd_limits="(soft=1024, hard=1048576)"\nlevel=info ts=2021-04-16T19:02:20.167Z caller=main.go:426 vm_limits="(soft=unlimited, hard=unlimited)"\nlevel=info ts=2021-04-16T19:02:20.169Z caller=web.go:540 component=web msg="Start listening for connections" address=0.0.0.0:9090\nlevel=info ts=2021-04-16T19:02:20.170Z caller=main.go:795 msg="Starting TSDB ..."\nlevel=info ts=2021-04-16T19:02:20.171Z caller=tls_config.go:191 component=web msg="TLS is disabled." http2=false\nlevel=info ts=2021-04-16T19:02:20.174Z caller=head.go:696 component=tsdb msg="Replaying on-disk memory mappable chunks if any"\nlevel=info ts=2021-04-16T19:02:20.175Z caller=head.go:710 component=tsdb msg="On-disk memory mappable chunks replay completed" duration=1.391446ms\nlevel=info ts=2021-04-16T19:02:20.175Z caller=head.go:716 component=tsdb msg="Replaying WAL, this may take a while"\nlevel=info ts=2021-04-16T19:02:20.178Z caller=head.go:768 component=tsdb msg="WAL segment loaded" segment=0 maxSegment=4\nlevel=info ts=2021-04-16T19:02:20.193Z caller=head.go:768 component=tsdb msg="WAL segment loaded" segment=1 maxSegment=4\nlevel=info ts=2021-04-16T19:02:20.221Z caller=head.go:768 component=tsdb msg="WAL segment loaded" segment=2 maxSegment=4\nlevel=info ts=2021-04-16T19:02:20.224Z caller=head.go:768 component=tsdb msg="WAL segment loaded" segment=3 maxSegment=4\nlevel=info ts=2021-04-16T19:02:20.229Z caller=head.go:768 component=tsdb msg="WAL segment loaded" segment=4 maxSegment=4\nlevel=info ts=2021-04-16T19:02:20.229Z caller=head.go:773 component=tsdb msg="WAL replay completed" checkpoint_replay_duration=43.716\xb5s wal_replay_duration=53.973285ms total_replay_duration=55.445308ms\nlevel=info ts=2021-04-16T19:02:20.233Z caller=main.go:815 fs_type=EXT4_SUPER_MAGIC\nlevel=info ts=2021-04-16T19:02:20.233Z caller=main.go:818 msg="TSDB started"\nlevel=info ts=2021-04-16T19:02:20.233Z caller=main.go:944 msg="Loading configuration file" filename=/etc/prometheus/prometheus.yml\nlevel=info ts=2021-04-16T19:02:20.234Z caller=main.go:975 msg="Completed loading of configuration file" filename=/etc/prometheus/prometheus.yml totalDuration=824.115\xb5s remote_storage=3.131\xb5s web_handler=401ns query_engine=1.056\xb5s scrape=236.454\xb5s scrape_sd=45.432\xb5s notify=723ns notify_sd=2.61\xb5s rules=956ns\nlevel=info ts=2021-04-16T19:02:20.234Z caller=main.go:767 msg="Server is ready to receive web requests."\n\n')),(0,r.yg)("p",null,"Go to ",(0,r.yg)("inlineCode",{parentName:"p"},"http://SERVER_IP_ADDRESS:9090/graph")," to check whether you are able to access the Prometheus\ninterface or not. If it is working, exit the process by pressing on ",(0,r.yg)("inlineCode",{parentName:"p"},"CTRL + C"),"."),(0,r.yg)("p",null,"Next, we would like to automatically start the server during the boot process, so we have to create\na new ",(0,r.yg)("inlineCode",{parentName:"p"},"systemd")," configuration file with the following config."),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-bash"},"sudo nano /etc/systemd/system/prometheus.service\n")),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-bash"},"[Unit]\n  Description=Prometheus Monitoring\n  Wants=network-online.target\n  After=network-online.target\n\n[Service]\n  User=prometheus\n  Group=prometheus\n  Type=simple\n  ExecStart=/usr/local/bin/prometheus \\\n  --config.file /etc/prometheus/prometheus.yml \\\n  --storage.tsdb.path /var/lib/prometheus/ \\\n  --web.console.templates=/etc/prometheus/consoles \\\n  --web.console.libraries=/etc/prometheus/console_libraries\n  ExecReload=/bin/kill -HUP $MAINPID\n\n[Install]\n  WantedBy=multi-user.target\n")),(0,r.yg)("p",null,"Once the file is saved, execute the command below to reload ",(0,r.yg)("inlineCode",{parentName:"p"},"systemd")," and enable the service so that\nit will be loaded automatically during the operating system's startup."),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-bash"},"sudo systemctl daemon-reload && systemctl enable prometheus && systemctl start prometheus\n")),(0,r.yg)("p",null,"Prometheus should be running now, and you should be able to access its front again end by\nre-visiting ",(0,r.yg)("inlineCode",{parentName:"p"},"IP_ADDRESS:9090/"),"."),(0,r.yg)("h2",{id:"installing-grafana"},"Installing Grafana"),(0,r.yg)("p",null,"In order to visualize your node metrics, you can use Grafana to query the Prometheus server. Run the\nfollowing commands to install it first."),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-bash"},"sudo apt-get install -y adduser libfontconfig1\nwget https://dl.grafana.com/oss/release/grafana_7.5.4_amd64.deb\nsudo dpkg -i grafana_7.5.4_amd64.deb\n")),(0,r.yg)("p",null,"If everything is fine, configure Grafana to auto-start on boot and then start the service."),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-bash"},"sudo systemctl daemon-reload\nsudo systemctl enable grafana-server\nsudo systemctl start grafana-server\n")),(0,r.yg)("p",null,"You can now access it by going to the ",(0,r.yg)("inlineCode",{parentName:"p"},"http://SERVER_IP_ADDRESS:3000/login"),". The default user and\npassword is admin/admin."),(0,r.yg)("admonition",{type:"note"},(0,r.yg)("p",{parentName:"admonition"},"If you want to change the port on which Grafana runs (3000 is a popular port), edit the file\n",(0,r.yg)("inlineCode",{parentName:"p"},"/usr/share/grafana/conf/defaults.ini")," with a command like\n",(0,r.yg)("inlineCode",{parentName:"p"},"sudo vim /usr/share/grafana/conf/defaults.ini")," and change the ",(0,r.yg)("inlineCode",{parentName:"p"},"http_port")," value to something else.\nThen restart grafana with ",(0,r.yg)("inlineCode",{parentName:"p"},"sudo systemctl restart grafana-server"),".")),(0,r.yg)("p",null,(0,r.yg)("img",{alt:"1-grafana-login",src:t(22566).A,width:"1500",height:"709"})),(0,r.yg)("p",null,"In order to visualize the node metrics, click ",(0,r.yg)("em",{parentName:"p"},"settings")," to configure the ",(0,r.yg)("inlineCode",{parentName:"p"},"Data Sources")," first."),(0,r.yg)("p",null,(0,r.yg)("img",{alt:"2-add-data-source",src:t(77445).A,width:"250",height:"300"})),(0,r.yg)("p",null,"Click ",(0,r.yg)("inlineCode",{parentName:"p"},"Add data source")," to choose where the data is coming from."),(0,r.yg)("p",null,(0,r.yg)("img",{alt:"2-add-data-source-2",src:t(95276).A,width:"2204",height:"1040"})),(0,r.yg)("p",null,"Select ",(0,r.yg)("inlineCode",{parentName:"p"},"Prometheus"),"."),(0,r.yg)("p",null,(0,r.yg)("img",{alt:"3-select-prometheus",src:t(86513).A,width:"700",height:"444"})),(0,r.yg)("p",null,"The only thing you need to input is the ",(0,r.yg)("inlineCode",{parentName:"p"},"URL")," that is ",(0,r.yg)("inlineCode",{parentName:"p"},"https://localhost:9090")," and then click\n",(0,r.yg)("inlineCode",{parentName:"p"},"Save & Test"),". If you see ",(0,r.yg)("inlineCode",{parentName:"p"},"Data source is working"),", your connection is configured correctly."),(0,r.yg)("p",null,(0,r.yg)("img",{alt:"4-configure-data-source",src:t(58570).A,width:"700",height:"729"})),(0,r.yg)("p",null,'Next, import the dashboard that lets you visualize your node data. Go to the menu bar on the left\nand mouse hover "+" then select ',(0,r.yg)("inlineCode",{parentName:"p"},"Import"),"."),(0,r.yg)("p",null,(0,r.yg)("inlineCode",{parentName:"p"},"Import via grafana.com")," - It allows you to use a dashboard that someone else has created and made\npublic. You can check what other dashboards are available via\n",(0,r.yg)("a",{parentName:"p",href:"https://grafana.com/grafana/dashboards"},"https://grafana.com/grafana/dashboards"),". In this guide, we\nuse\n",(0,r.yg)("a",{parentName:"p",href:"https://grafana.com/grafana/dashboards/21715-substrate-node-metrics/"},'"Substrate Node Metrics"'),', so\ninput "21715" under the id field and click ',(0,r.yg)("inlineCode",{parentName:"p"},"Load"),"."),(0,r.yg)("p",null,(0,r.yg)("img",{alt:"5-import-dashboard",src:t(88400).A,width:"1272",height:"1320"})),(0,r.yg)("p",null,'Once it has been loaded, make sure to select "Prometheus" in the Prometheus dropdown list. Then\nclick ',(0,r.yg)("inlineCode",{parentName:"p"},"Import"),"."),(0,r.yg)("p",null,(0,r.yg)("img",{alt:"5-import-dashboard-2",src:t(19877).A,width:"1426",height:"1382"})),(0,r.yg)("p",null,"In the meantime, start your Polkadot node by running ",(0,r.yg)("inlineCode",{parentName:"p"},"./polkadot"),". If everything is done correctly,\nyou should be able to monitor your node's performance such as the current block height, network\ntraffic, running tasks, etc. on the Grafana dashboard."),(0,r.yg)("p",null,(0,r.yg)("img",{alt:"6-dashboard-metric",src:t(97320).A,width:"1551",height:"930"})),(0,r.yg)("h2",{id:"installing-and-configuring-alertmanager-optional"},"Installing and Configuring Alertmanager (Optional)"),(0,r.yg)("p",null,"In this section, let's configure the Alertmanager that helps to predict the potential problem or\nnotify you of the current problem in your server. Alerts can be sent in Slack, Email, Matrix, or\nothers. In this guide, we will show you how to configure the email notifications using Gmail if your\nnode goes down."),(0,r.yg)("p",null,"First, download the latest binary of AlertManager and unzip it by running the command below:"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-bash"},"wget https://github.com/prometheus/alertmanager/releases/download/v0.26.0/alertmanager-0.26.0.linux-amd64.tar.gz\ntar -xvzf alertmanager-0.26.0.linux-amd64.tar.gz\nmv alertmanager-0.26.0.linux-amd64/alertmanager /usr/local/bin\n")),(0,r.yg)("h3",{id:"gmail-setup"},"Gmail Setup"),(0,r.yg)("p",null,"To allow AlertManager to send an email to you, you will need to generate something called an\n",(0,r.yg)("inlineCode",{parentName:"p"},"app password")," in your Gmail account. For details, click\n",(0,r.yg)("a",{parentName:"p",href:"https://support.google.com/accounts/answer/185833?hl=en"},"here")," to follow the whole setup."),(0,r.yg)("p",null,"You should see something like below:"),(0,r.yg)("p",null,(0,r.yg)("img",{alt:"grafana-am-1",src:t(51362).A,width:"700",height:"680"})),(0,r.yg)("p",null,"Copy and save it somewhere else first."),(0,r.yg)("h3",{id:"alertmanager-configuration"},"AlertManager Configuration"),(0,r.yg)("p",null,"There is a configuration file named ",(0,r.yg)("inlineCode",{parentName:"p"},"alertmanager.yml")," inside the directory that you just extracted\nin the previous command, but that is not of our use. We will create our ",(0,r.yg)("inlineCode",{parentName:"p"},"alertmanager.yml")," file\nunder ",(0,r.yg)("inlineCode",{parentName:"p"},"/etc/alertmanager")," with the following config."),(0,r.yg)("admonition",{type:"note"},(0,r.yg)("p",{parentName:"admonition"},'Ensure to change the ownership of "/etc/alertmanager" to ',(0,r.yg)("inlineCode",{parentName:"p"},"prometheus")," by executing"),(0,r.yg)("pre",{parentName:"admonition"},(0,r.yg)("code",{parentName:"pre",className:"language-bash"},"sudo chown -R prometheus:prometheus /etc/alertmanager\n"))),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre"},"global:\n resolve_timeout: 1m\n\nroute:\n receiver: 'gmail-notifications'\n\nreceivers:\n- name: 'gmail-notifications'\n  email_configs:\n  - to: YOUR_EMAIL\n    from: YOUR_EMAIL\n    smarthost: smtp.gmail.com:587\n    auth_username: YOUR_EMAIL\n    auth_identity: YOUR_EMAIL\n    auth_password: YOUR_APP_PASSWORD\n    send_resolved: true\n")),(0,r.yg)("p",null,"With the above configuration, alerts will be sent using the email you set above. Remember to change\n",(0,r.yg)("inlineCode",{parentName:"p"},"YOUR_EMAIL")," to your email and paste the app password you just saved earlier to the\n",(0,r.yg)("inlineCode",{parentName:"p"},"YOUR_APP_PASSWORD"),"."),(0,r.yg)("p",null,"Next, create another ",(0,r.yg)("inlineCode",{parentName:"p"},"systemd")," configuration file named ",(0,r.yg)("inlineCode",{parentName:"p"},"alertmanager.service")," by running the\ncommand ",(0,r.yg)("inlineCode",{parentName:"p"},"sudo nano /etc/systemd/system/alertmanager.service")," with the following config."),(0,r.yg)("admonition",{title:"SERVER_IP",type:"info"},(0,r.yg)("p",{parentName:"admonition"},"Change to your host IP address and make sure port 9093 is opened.")),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre"},"[Unit]\nDescription=AlertManager Server Service\nWants=network-online.target\nAfter=network-online.target\n\n[Service]\nUser=root\nGroup=root\nType=simple\nExecStart=/usr/local/bin/alertmanager --config.file /etc/alertmanager/alertmanager.yml --web.external-url=http://SERVER_IP:9093 --cluster.advertise-address='0.0.0.0:9093'\n\n\n[Install]\nWantedBy=multi-user.target\n")),(0,r.yg)("p",null,"To the start the Alertmanager, run the following commands:"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre"},"sudo systemctl daemon-reload && sudo systemctl enable alertmanager && sudo systemctl start alertmanager && sudo systemctl status alertmanager\n")),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre"},"\u25cf alertmanager.service - AlertManager Server Service\n   Loaded: loaded (/etc/systemd/system/alertmanager.service; enabled; vendor preset: enabled)\n   Active: active (running) since Thu 2020-08-20 22:01:21 CEST; 3 days ago\n Main PID: 20592 (alertmanager)\n    Tasks: 70 (limit: 9830)\n   CGroup: /system.slice/alertmanager.service\n")),(0,r.yg)("p",null,'You should see the process status is "active (running)" if you have configured properly.'),(0,r.yg)("p",null,"There is a Alertmanager plugin in Grafana that can help you to monitor the alert information. To\ninstall it, execute the command below:"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre"},"sudo grafana-cli plugins install camptocamp-prometheus-alertmanager-datasource\n")),(0,r.yg)("p",null,"And restart Grafana once the plugin is successfully installed."),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre"},"sudo systemctl restart grafana-server\n")),(0,r.yg)("p",null,"Now go to your Grafana dashboard ",(0,r.yg)("inlineCode",{parentName:"p"},"SERVER_IP:3000")," and configure the Alertmanager datasource."),(0,r.yg)("p",null,(0,r.yg)("img",{alt:"grafana-am-5",src:t(78070).A,width:"700",height:"293"})),(0,r.yg)("p",null,'Go to Configuration -> Data Sources, search "Prometheus AlertManger" if you cannot find it at the\ntop.'),(0,r.yg)("p",null,(0,r.yg)("img",{alt:"grafana-am-2",src:t(70277).A,width:"700",height:"363"})),(0,r.yg)("p",null,"Fill in the ",(0,r.yg)("inlineCode",{parentName:"p"},"URL")," to your server location followed by the port number used in the Alertmanager."),(0,r.yg)("p",null,'Then click "Save & Test" at the bottom to test the connection.'),(0,r.yg)("p",null,(0,r.yg)("img",{alt:"grafana-am-3",src:t(1756).A,width:"700",height:"823"})),(0,r.yg)("p",null,"To monitor the alerts, let's import dashboard \"",(0,r.yg)("a",{parentName:"p",href:"https://grafana.com/dashboards/8010"},"8010"),'" that is\nused for Alertmanager. And make sure to select the "Prometheus AlertManager" in the last column.\nThen click "Import".'),(0,r.yg)("p",null,"You will end up having the following:"),(0,r.yg)("p",null,(0,r.yg)("img",{alt:"grafana-am-4",src:t(8791).A,width:"1200",height:"516"})),(0,r.yg)("h3",{id:"alertmanager-integration"},"AlertManager Integration"),(0,r.yg)("p",null,"To let the Prometheus server be able to talk to the AlertManager, we will need to add the following\nconfig in the ",(0,r.yg)("inlineCode",{parentName:"p"},"etc/prometheus/prometheus.yml"),"."),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre"},"rule_files:\n  - 'rules.yml'\n\nalerting:\n  alertmanagers:\n  - static_configs:\n    - targets:\n      - localhost:9093\n")),(0,r.yg)("p",null,"That is the updated ",(0,r.yg)("inlineCode",{parentName:"p"},"etc/prometheus/prometheus.yml"),"."),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre"},"global:\n  scrape_interval:     15s\n  evaluation_interval: 15s\n\nrule_files:\n  - 'rules.yml'\n\nalerting:\n  alertmanagers:\n  - static_configs:\n    - targets:\n      - localhost:9093\n\nscrape_configs:\n  - job_name: 'prometheus'\n    scrape_interval: 5s\n    static_configs:\n      - targets: ['localhost:9090']\n  - job_name: 'substrate_node'\n    scrape_interval: 5s\n    static_configs:\n      - targets: ['localhost:9615']\n")),(0,r.yg)("p",null,'We will need to create a new file called "rules.yml" under ',(0,r.yg)("inlineCode",{parentName:"p"},"/etc/prometheus/")," that is defined all\nthe rules we would like to detect. If any of the rules defined in this file is fulfilled, an alert\nwill be triggered. The rule below checks whether the instance is down. If it is down for more than 5\nminutes, an email notification will be sent. If you would like to learn more about the details of\nthe rule defining, go\n",(0,r.yg)("a",{parentName:"p",href:"https://prometheus.io/docs/prometheus/latest/configuration/alerting_rules/"},"here"),". There are other\ninteresting alerts you may find useful ",(0,r.yg)("a",{parentName:"p",href:"https://awesome-prometheus-alerts.grep.to/rules.html"},"here"),"."),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre"},'groups:\n  - name: alert_rules\n    rules:\n      - alert: InstanceDown\n        expr: up == 0\n        for: 5m\n        labels:\n          severity: critical\n        annotations:\n          summary: "Instance [{{ $labels.instance }}] down"\n          description: "[{{ $labels.instance }}] of job [{{ $labels.job }}] has been down for more than 1 minute."\n')),(0,r.yg)("p",null,"Change the ownership of this file to ",(0,r.yg)("inlineCode",{parentName:"p"},"prometheus")," instead of ",(0,r.yg)("inlineCode",{parentName:"p"},"root")," by running:"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-bash"},"sudo chown prometheus:prometheus rules.yml\n")),(0,r.yg)("p",null,'To check the rules defined in the "rules.yml" is syntactically correct, run the following command:'),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-bash"},"sudo -u prometheus promtool check rules rules.yml\n")),(0,r.yg)("p",null,"Finally, restart everything by running:"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-bash"},"sudo systemctl restart prometheus && sudo systemctl restart alertmanager\n")),(0,r.yg)("p",null,"Now if one of your target instances down, you will receive an alert on the AlertManager and Gmail\nlike below."),(0,r.yg)("p",null,(0,r.yg)("img",{alt:"grafana-am-6",src:t(14425).A,width:"700",height:"529"})))}c.isMDXComponent=!0},51362:(e,n,t)=>{t.d(n,{A:()=>a});const a=t.p+"assets/images/1-alert-manager-772a381e44fb289d713129bce0ac1a7e.png"},22566:(e,n,t)=>{t.d(n,{A:()=>a});const a=t.p+"assets/images/1-grafana-login-c1c6fbd7d08509b83393b50c01bb0616.png"},95276:(e,n,t)=>{t.d(n,{A:()=>a});const a=t.p+"assets/images/2-add-data-source-2-1a307a18d157b5a6dcfc5ff9affa9998.png"},77445:(e,n,t)=>{t.d(n,{A:()=>a});const a=t.p+"assets/images/2-add-data-source-d761a4186c463aad357c6130b2881789.png"},70277:(e,n,t)=>{t.d(n,{A:()=>a});const a=t.p+"assets/images/2-alert-manager-d3e306837b2c64bf91a0cad9af6a7864.png"},1756:(e,n,t)=>{t.d(n,{A:()=>a});const a=t.p+"assets/images/3-alert-manager-1fda12aea0c70f3f6844b52b95331aa8.png"},86513:(e,n,t)=>{t.d(n,{A:()=>a});const a=t.p+"assets/images/3-select-prometheus-0791dd096d2ca64c0146121e58f9c3e3.png"},8791:(e,n,t)=>{t.d(n,{A:()=>a});const a=t.p+"assets/images/4-alert-manager-85181686515e903e6a4098ddd9575a2f.png"},58570:(e,n,t)=>{t.d(n,{A:()=>a});const a=t.p+"assets/images/4-configure-data-source-7b1620ce4fc9ab2de90283415cea7df9.png"},78070:(e,n,t)=>{t.d(n,{A:()=>a});const a=t.p+"assets/images/5-alert-manager-c72c2dc814113f58399347add3c1f884.png"},19877:(e,n,t)=>{t.d(n,{A:()=>a});const a=t.p+"assets/images/5-import-dashboard-2-b6118a68ef2f8d78c555735471678f22.png"},88400:(e,n,t)=>{t.d(n,{A:()=>a});const a=t.p+"assets/images/5-import-dashboard-4a6f27887cfd081b9385dfd897787cbd.png"},14425:(e,n,t)=>{t.d(n,{A:()=>a});const a=t.p+"assets/images/6-alert-manager-12cff39ab28672b46017b175f875985b.png"},97320:(e,n,t)=>{t.d(n,{A:()=>a});const a=t.p+"assets/images/6-dashboard-metric-52044f98ca5a45715a8731a4cc96ed1b.png"}}]);