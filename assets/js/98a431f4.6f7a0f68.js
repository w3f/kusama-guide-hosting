"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[7584],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>h});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var c=a.createContext({}),l=function(e){var t=a.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},d=function(e){var t=l(e.components);return a.createElement(c.Provider,{value:t},e.children)},u="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},f=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,c=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),u=l(n),f=r,h=u["".concat(c,".").concat(f)]||u[f]||p[f]||i;return n?a.createElement(h,o(o({ref:t},d),{},{components:n})):a.createElement(h,o({ref:t},d))}));function h(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,o=new Array(i);o[0]=f;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s[u]="string"==typeof e?e:r,o[1]=s;for(var l=2;l<i;l++)o[l]=n[l];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}f.displayName="MDXCreateElement"},51240:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>c,default:()=>h,frontMatter:()=>s,metadata:()=>l,toc:()=>u});var a=n(87462),r=n(63366),i=(n(67294),n(3905)),o=["components"],s={id:"transaction-attacks",title:"Why Verify Transactions?",sidebar_label:"Transaction Verification",description:"How to Prevent from being a Victim of an Attack",keywords:["transaction","extrinsic","verification","protection"],slug:"../transaction-attacks"},c=void 0,l={unversionedId:"general/transaction-attacks",id:"general/transaction-attacks",title:"Why Verify Transactions?",description:"How to Prevent from being a Victim of an Attack",source:"@site/../docs/general/transaction-attacks.md",sourceDirName:"general",slug:"/transaction-attacks",permalink:"/docs/transaction-attacks",draft:!1,tags:[],version:"current",lastUpdatedBy:"Filippo",lastUpdatedAt:1704367237,formattedLastUpdatedAt:"Jan 4, 2024",frontMatter:{id:"transaction-attacks",title:"Why Verify Transactions?",sidebar_label:"Transaction Verification",description:"How to Prevent from being a Victim of an Attack",keywords:["transaction","extrinsic","verification","protection"],slug:"../transaction-attacks"},sidebar:"docs",previous:{title:"Scam Protection",permalink:"/docs/learn-scams"},next:{title:"Build on Polkadot",permalink:"/docs/start-building"}},d={},u=[{value:"Clipboard Memory",id:"clipboard-memory",level:3},{value:"Malicious Website/dApp",id:"malicious-websitedapp",level:3},{value:"Malicious Browser Extension",id:"malicious-browser-extension",level:3},{value:"Corrupted metadata",id:"corrupted-metadata",level:3},{value:"Corrupted QR-code (Parity Signer)",id:"corrupted-qr-code-parity-signer",level:3},{value:"Defense against Attacks",id:"defense-against-attacks",level:2}],p={toc:u},f="wrapper";function h(e){var t=e.components,n=(0,r.Z)(e,o);return(0,i.kt)(f,(0,a.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"In general, an attacker would make you think you are signing a Transaction A when in reality you are\nsigning a Transaction B. An Attack might come from:"),(0,i.kt)("h3",{id:"clipboard-memory"},"Clipboard Memory"),(0,i.kt)("admonition",{type:"info"},(0,i.kt)("p",{parentName:"admonition"},"For a more detailed read about clipboard memory attacks see\n",(0,i.kt)("a",{parentName:"p",href:"https://www.kaspersky.com/blog/cryptoshuffler-bitcoin-stealer/19976/"},"this article"),".")),(0,i.kt)("p",null,"This is a common attack. The clipboard memory is that memory on you computer dedicated to copy-paste\noperations. There is malicious software that can be remotely installed on your computer and that can\ndetect when a cryptocurrency address is copied. For example, you want to send funds to Address A\n(belonging to you) but after copying address A a malicious software swaps that address with Address\nB (belonging to an attacker). This attack can be prevented by checking the receiver address before\nsigning. Failing to do so could result in loss of the funds."),(0,i.kt)("h3",{id:"malicious-websitedapp"},"Malicious Website/dApp"),(0,i.kt)("p",null,"This is a common attack that can happen if you are interacting with a malicious site (dApp). In this\nscenario you want to perform Transaction A on the website, but the dApp will send Transaction B to\nthe extension for signing. In this case the extension will show Transaction B. If you are using a\nLedger device you have a second layer of verification, as it will also display Transaction B."),(0,i.kt)("h3",{id:"malicious-browser-extension"},"Malicious Browser Extension"),(0,i.kt)("p",null,"This scenario can happen if you have downloaded a malicious browser extension or a trusted browser\nextension, from a non-trusted source. In this scenario the extension will display that you will sign\nfor an Transaction A but in the background will execute Transaction B. If you are using a\n",(0,i.kt)("a",{parentName:"p",href:"https://www.ledger.com/"},"Ledger")," device this attack can be detected because you will be able to see\nTransaction B on the screen of your Ledger device."),(0,i.kt)("h3",{id:"corrupted-metadata"},"Corrupted metadata"),(0,i.kt)("p",null,"This attack is least common and might result in signing a non-intended transaction without the\npossibility of verifying it. Before authorizing the metadata update check who is requesting it.\nMetadata updates for browser extensions might be requested by dApps (for example DeFi apps of\nparachains). For the extensions, you should trust the app that requests the update. When updating\nthe metadata for Parity Signer you should trust the issuer of the metadata (or generate the QR\nfountain yourself)."),(0,i.kt)("h3",{id:"corrupted-qr-code-parity-signer"},"Corrupted QR-code (Parity Signer)"),(0,i.kt)("p",null,"This is a sub-case of the malicious dApp scenario. If your account is on\n",(0,i.kt)("a",{parentName:"p",href:"https://www.parity.io/technologies/signer/"},"Parity Signer")," the transaction will be displayed as a\nQR code, instead of the extension showing its details and you need to verify it on the device. The\ncorrupted QR code will make you sign for an Transaction B when you want to sign for Transaction A.\nThis will be showed in the Signer app and a careful user will notice it. If the metadata in the\nSigner is already incorrect (or the Signer is corrupted) there is the risk of signing a non-intended\ntransaction without the possibility of verifying it."),(0,i.kt)("h2",{id:"defense-against-attacks"},"Defense against Attacks"),(0,i.kt)("admonition",{type:"warning"},(0,i.kt)("p",{parentName:"admonition"},"If you can't verify the transaction or you suspect you are signing something different than what you\nintended, don't sign it!")),(0,i.kt)("p",null,"To avoid being victim of an attack:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Use only trusted extensions, sites and software in general."),(0,i.kt)("li",{parentName:"ul"},"Use cold storage options (Ledger, Signer) and verify on them. Trust what these devices tell you\nover what is shown in the app or the browser extension."),(0,i.kt)("li",{parentName:"ul"},"Update Signer metadata only from trusted sources (or do it yourself)."),(0,i.kt)("li",{parentName:"ul"},"Accept metadata updates for the extension only from trusted apps.")))}h.isMDXComponent=!0}}]);