"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[3306],{15680:(e,a,n)=>{n.d(a,{xA:()=>u,yg:()=>g});var t=n(96540);function r(e,a,n){return a in e?Object.defineProperty(e,a,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[a]=n,e}function o(e,a){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);a&&(t=t.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),n.push.apply(n,t)}return n}function s(e){for(var a=1;a<arguments.length;a++){var n=null!=arguments[a]?arguments[a]:{};a%2?o(Object(n),!0).forEach((function(a){r(e,a,n[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(n,a))}))}return e}function i(e,a){if(null==e)return{};var n,t,r=function(e,a){if(null==e)return{};var n,t,r={},o=Object.keys(e);for(t=0;t<o.length;t++)n=o[t],a.indexOf(n)>=0||(r[n]=e[n]);return r}(e,a);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(t=0;t<o.length;t++)n=o[t],a.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=t.createContext({}),d=function(e){var a=t.useContext(l),n=a;return e&&(n="function"==typeof e?e(a):s(s({},a),e)),n},u=function(e){var a=d(e.components);return t.createElement(l.Provider,{value:a},e.children)},m="mdxType",h={inlineCode:"code",wrapper:function(e){var a=e.children;return t.createElement(t.Fragment,{},a)}},c=t.forwardRef((function(e,a){var n=e.components,r=e.mdxType,o=e.originalType,l=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),m=d(n),c=r,g=m["".concat(l,".").concat(c)]||m[c]||h[c]||o;return n?t.createElement(g,s(s({ref:a},u),{},{components:n})):t.createElement(g,s({ref:a},u))}));function g(e,a){var n=arguments,r=a&&a.mdxType;if("string"==typeof e||r){var o=n.length,s=new Array(o);s[0]=c;var i={};for(var l in a)hasOwnProperty.call(a,l)&&(i[l]=a[l]);i.originalType=e,i[m]="string"==typeof e?e:r,s[1]=i;for(var d=2;d<o;d++)s[d]=n[d];return t.createElement.apply(null,s)}return t.createElement.apply(null,n)}c.displayName="MDXCreateElement"},93319:(e,a,n)=>{n.r(a),n.d(a,{assets:()=>u,contentTitle:()=>l,default:()=>g,frontMatter:()=>i,metadata:()=>d,toc:()=>m});var t=n(58168),r=n(98587),o=(n(96540),n(15680)),s=["components"],i={id:"bridgehub-dashboards",title:"BridgeHub Dashboards",sidebar_label:"BridgeHub",description:"BridgeHub is a system parachain within the Polkadot ecosystem, designed to enable trustless bridging between Polkadot and other blockchains such as Kusama and Ethereum.",keywords:["polkadot","kusama","dashboard","dune","bridgehub","system-parachain"],slug:"../bridgehub-dashboards"},l="BridgeHub Dashboards",d={unversionedId:"general/dune-analytics/parachain-dashboards/bridgehub-dashboards",id:"general/dune-analytics/parachain-dashboards/bridgehub-dashboards",title:"BridgeHub Dashboards",description:"BridgeHub is a system parachain within the Polkadot ecosystem, designed to enable trustless bridging between Polkadot and other blockchains such as Kusama and Ethereum.",source:"@site/../docs/general/dune-analytics/parachain-dashboards/bridgehub-dashboards.md",sourceDirName:"general/dune-analytics/parachain-dashboards",slug:"/general/dune-analytics/bridgehub-dashboards",permalink:"/docs/general/dune-analytics/bridgehub-dashboards",draft:!1,tags:[],version:"current",lastUpdatedBy:"MK",lastUpdatedAt:1719215716,formattedLastUpdatedAt:"Jun 24, 2024",frontMatter:{id:"bridgehub-dashboards",title:"BridgeHub Dashboards",sidebar_label:"BridgeHub",description:"BridgeHub is a system parachain within the Polkadot ecosystem, designed to enable trustless bridging between Polkadot and other blockchains such as Kusama and Ethereum.",keywords:["polkadot","kusama","dashboard","dune","bridgehub","system-parachain"],slug:"../bridgehub-dashboards"}},u={},m=[{value:"Overview",id:"overview",level:2},{value:"Featured Dashboards on Dune",id:"featured-dashboards-on-dune",level:2},{value:"Key Tables",id:"key-tables",level:2},{value:"Useful Queries",id:"useful-queries",level:2},{value:"Getting Started with Queries",id:"getting-started-with-queries",level:2}],h={toc:m},c="wrapper";function g(e){var a=e.components,n=(0,r.A)(e,s);return(0,o.yg)(c,(0,t.A)({},h,n,{components:a,mdxType:"MDXLayout"}),(0,o.yg)("h1",{id:"bridgehub-dashboards"},"BridgeHub Dashboards"),(0,o.yg)("h2",{id:"overview"},"Overview"),(0,o.yg)("p",null,"Polkadot BridgeHub is a system parachain within the Polkadot ecosystem, designed to enable trustless\nbridging between Polkadot and other blockchains such as Kusama and Ethereum. It ensures secure\ncross-chain communication through a combination of on-chain and off-chain components. This dashboard\nprimarily analyzes the bridging information between Polkadot and Kusama."),(0,o.yg)("p",null,"The Ethereum to Polkadot BridgeHub primarily utilizes Snowbridge. For more details, visit our\n",(0,o.yg)("a",{parentName:"p",href:"https://dune.com/substrate/snowbridge"},"Snowbridge Dashboard"),"."),(0,o.yg)("h2",{id:"featured-dashboards-on-dune"},"Featured Dashboards on Dune"),(0,o.yg)("p",null,"Here you will find a variety of dashboards that help visualize data from the BridgeHub parachain:"),(0,o.yg)("ul",null,(0,o.yg)("li",{parentName:"ul"},(0,o.yg)("a",{parentName:"li",href:"https://dune.com/substrate/bridgehub"},"BridgeHub"),": A comprehensive analysis of BridgeHub,\nincluding: Kusama Related On Chain Data Analysis, Analysis of Messages with Kusama.")),(0,o.yg)("h2",{id:"key-tables"},"Key Tables"),(0,o.yg)("p",null,"Data from the BridgeHub parachain is organized into several key tables:"),(0,o.yg)("ul",null,(0,o.yg)("li",{parentName:"ul"},(0,o.yg)("inlineCode",{parentName:"li"},"bridgehub.balances")),(0,o.yg)("li",{parentName:"ul"},(0,o.yg)("inlineCode",{parentName:"li"},"bridgehub.blocks")),(0,o.yg)("li",{parentName:"ul"},(0,o.yg)("inlineCode",{parentName:"li"},"bridgehub.calls")),(0,o.yg)("li",{parentName:"ul"},(0,o.yg)("inlineCode",{parentName:"li"},"bridgehub.events")),(0,o.yg)("li",{parentName:"ul"},(0,o.yg)("inlineCode",{parentName:"li"},"bridgehub.extrinsics")),(0,o.yg)("li",{parentName:"ul"},(0,o.yg)("inlineCode",{parentName:"li"},"bridgehub.transfers"))),(0,o.yg)("p",null,"Start building your own queries using granular data on Dune\n",(0,o.yg)("a",{parentName:"p",href:"https://dune.com/queries?category=canonical&namespace=bridgehub"},"here"),"."),(0,o.yg)("h2",{id:"useful-queries"},"Useful Queries"),(0,o.yg)("p",null,"Some useful queries for Bridgehub are provided:"),(0,o.yg)("table",null,(0,o.yg)("thead",{parentName:"table"},(0,o.yg)("tr",{parentName:"thead"},(0,o.yg)("th",{parentName:"tr",align:null},"Title"),(0,o.yg)("th",{parentName:"tr",align:null},"Query"),(0,o.yg)("th",{parentName:"tr",align:null},"Description"))),(0,o.yg)("tbody",{parentName:"table"},(0,o.yg)("tr",{parentName:"tbody"},(0,o.yg)("td",{parentName:"tr",align:null},"Bridgehub Messages with Kusama"),(0,o.yg)("td",{parentName:"tr",align:null},(0,o.yg)("a",{parentName:"td",href:"https://dune.com/queries/3816910"},"queries_3816910")),(0,o.yg)("td",{parentName:"tr",align:null},"Find all message records between Polkadot and Kusama")))),(0,o.yg)("h2",{id:"getting-started-with-queries"},"Getting Started with Queries"),(0,o.yg)("p",null,"To get started with querying data from Unique, you are welcome to use the mentioned materialized\nqueries. You can use the following DuneSQL queries as examples:"),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-sql",metastring:'title="Bridgehub and Kusama Message Trends" showLineNumbers',title:'"Bridgehub',and:!0,Kusama:!0,Message:!0,'Trends"':!0,showLineNumbers:!0},'WITH\n  transactions AS (\n    SELECT\n      CASE\n        WHEN ROW_NUMBER() OVER (\n          PARTITION BY\n            "from",\n            "to",\n            "send_time"\n          ORDER BY\n            "send_time"\n        ) % 2 = 1 THEN "from"\n        ELSE "to"\n      END AS direction,\n      date_trunc(\'month\', "send_time") as month\n    FROM\n      query_3816910\n  ),\n  polkadot_to_kusama AS (\n    SELECT\n      month,\n      COUNT(*) as count_polkadot_to_kusama\n    FROM\n      transactions\n    WHERE\n      direction = \'polkadot\'\n    GROUP BY\n      month\n  ),\n  kusama_to_polkadot AS (\n    SELECT\n      month,\n      COUNT(*) as count_kusama_to_polkadot\n    FROM\n      transactions\n    WHERE\n      direction = \'kusama\'\n    GROUP BY\n      month\n  ),\n  all_polkadot_to_kusama AS (\n    SELECT\n      \'for_join\' as "for_join",\n      COUNT(*) as total_count_polkadot_to_kusama\n    FROM\n      transactions\n    WHERE\n      direction = \'polkadot\'\n  ),\n  all_kusama_to_polkadot AS (\n    SELECT\n      \'for_join\' as "for_join",\n      COUNT(*) as total_count_kusama_to_polkadot\n    FROM\n      transactions\n    WHERE\n      direction = \'kusama\'\n  ),\n  monthly_result as (\n    SELECT\n      coalesce(\n        polkadot_to_kusama.month,\n        kusama_to_polkadot.month\n      ) as month,\n      coalesce(count_polkadot_to_kusama, 0) as count_polkadot_to_kusama,\n      coalesce(count_kusama_to_polkadot, 0) as count_kusama_to_polkadot,\n      \'for_join\' as "for_join"\n    FROM\n      polkadot_to_kusama\n      FULL OUTER JOIN kusama_to_polkadot ON polkadot_to_kusama.month = kusama_to_polkadot.month\n    ORDER BY\n      month\n  )\nSELECT\n  monthly_result.month,\n  monthly_result.count_polkadot_to_kusama,\n  monthly_result.count_kusama_to_polkadot,\n  all_polkadot_to_kusama.total_count_polkadot_to_kusama,\n  all_kusama_to_polkadot.total_count_kusama_to_polkadot\nFROM\n  monthly_result\n  LEFT JOIN all_polkadot_to_kusama on monthly_result.for_join = all_polkadot_to_kusama.for_join\n  LEFT JOIN all_kusama_to_polkadot on monthly_result.for_join = all_kusama_to_polkadot.for_join\n')),(0,o.yg)("p",null,"Query result:"),(0,o.yg)("iframe",{src:"https://dune.com/embeds/3821198/6426898",height:"350",width:"100%"}),(0,o.yg)("admonition",{title:"DuneSQL Reference",type:"info"},(0,o.yg)("p",{parentName:"admonition"},"For more information on DuneSQL, please refer to the ",(0,o.yg)("a",{parentName:"p",href:"/docs/general/dunesql-cheatsheet"},"DuneSQL Cheatsheet"),"\nand\n",(0,o.yg)("a",{parentName:"p",href:"https://docs.dune.com/query-engine/Functions-and-operators/index"},"DuneSQL Official Documentation"),".")))}g.isMDXComponent=!0}}]);