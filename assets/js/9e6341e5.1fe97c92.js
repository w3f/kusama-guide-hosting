"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[8431],{62147:(e,s,t)=>{t.r(s),t.d(s,{assets:()=>h,contentTitle:()=>a,default:()=>l,frontMatter:()=>i,metadata:()=>o,toc:()=>d});var n=t(74848),r=t(28453);const i={id:"learn-xcm-docs-transfers-reserve",title:"Reserve-backed Transfers",sidebar_label:"Reserve-backed Transfers",description:"Reserve-backed Transfers: Third-party Reserve to store Assets.",keywords:["xcm","cross-consensus messaging","transfers","reserve"],slug:"../transfers-reserve"},a="Reserve-backed transfers",o={id:"learn/xcm/journey/transfers/learn-xcm-docs-transfers-reserve",title:"Reserve-backed Transfers",description:"Reserve-backed Transfers: Third-party Reserve to store Assets.",source:"@site/../docs/learn/xcm/journey/transfers/reserve.md",sourceDirName:"learn/xcm/journey/transfers",slug:"/learn/xcm/journey/transfers-reserve",permalink:"/docs/learn/xcm/journey/transfers-reserve",draft:!1,unlisted:!1,tags:[],version:"current",lastUpdatedBy:"bader y",lastUpdatedAt:1694099593e3,frontMatter:{id:"learn-xcm-docs-transfers-reserve",title:"Reserve-backed Transfers",sidebar_label:"Reserve-backed Transfers",description:"Reserve-backed Transfers: Third-party Reserve to store Assets.",keywords:["xcm","cross-consensus messaging","transfers","reserve"],slug:"../transfers-reserve"},sidebar:"docs",previous:{title:"Asset Teleportation",permalink:"/docs/learn/xcm/journey/transfers-teleport"},next:{title:"Fee Handling",permalink:"/docs/learn/xcm/journey-fees"}},h={},d=[{value:"Process",id:"process",level:2},{value:"1. InitiateReserveWithdraw",id:"1-initiatereservewithdraw",level:3},{value:"2. WithdrawAsset",id:"2-withdrawasset",level:3},{value:"3. DepositReserveAsset",id:"3-depositreserveasset",level:3},{value:"4. ReserveAssetDeposited",id:"4-reserveassetdeposited",level:3},{value:"5. DepositAsset",id:"5-depositasset",level:3},{value:"Thoughts",id:"thoughts",level:3},{value:"A note on trust",id:"a-note-on-trust",level:3},{value:"Example",id:"example",level:2},{value:"InitiateReserveWithdraw",id:"initiatereservewithdraw",level:3},{value:"DepositReserveAsset",id:"depositreserveasset",level:3},{value:"ReserveAssetDeposited",id:"reserveassetdeposited",level:3},{value:"Another example",id:"another-example",level:2},{value:"Another note on trust",id:"another-note-on-trust",level:3},{value:"Next steps",id:"next-steps",level:2}];function c(e){const s={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",ul:"ul",...(0,r.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(s.header,{children:(0,n.jsx)(s.h1,{id:"reserve-backed-transfers",children:"Reserve-backed transfers"})}),"\n",(0,n.jsx)(s.p,{children:"For consensus systems that don't have the level of trust required for asset teleportation, they can\ninstead opt for trusting a third party called a reserve to store the real assets (think Statemine on\nKusama, or Statemint on Polkadot). The source and the destination need a way to keep track of the\nreal assets they own on the reserve, this is usually done by minting a new derivative token. Both\nsource and destination now need accounts on the reserve to hold their assets, we call these their\nsovereign accounts on that system."}),"\n",(0,n.jsx)(s.h2,{id:"process",children:"Process"}),"\n",(0,n.jsx)(s.p,{children:(0,n.jsx)(s.img,{alt:"Reserve Backed Transfer diagram",src:t(29660).A+"",width:"863",height:"651"})}),"\n",(0,n.jsx)(s.p,{children:"The flow in this diagram is further explained below:"}),"\n",(0,n.jsx)(s.h3,{id:"1-initiatereservewithdraw",children:"1. InitiateReserveWithdraw"}),"\n",(0,n.jsx)(s.p,{children:"The source gathers the derivative assets to be transferred from the sending account and burns them,\ntaking note of the amount of derivatives that were burned."}),"\n",(0,n.jsx)(s.h3,{id:"2-withdrawasset",children:"2. WithdrawAsset"}),"\n",(0,n.jsxs)(s.p,{children:["The source sends a ",(0,n.jsx)(s.code,{children:"WithdrawAsset"})," instruction to the reserve, instructing it to withdraw real\nassets equivalent to the amount of derivatives burned from the source chain."]}),"\n",(0,n.jsx)(s.h3,{id:"3-depositreserveasset",children:"3. DepositReserveAsset"}),"\n",(0,n.jsx)(s.p,{children:"The reserve deposits the assets withdrawn from the previous step to the destination's sovereign\naccount, taking note of the amount of assets deposited."}),"\n",(0,n.jsx)(s.h3,{id:"4-reserveassetdeposited",children:"4. ReserveAssetDeposited"}),"\n",(0,n.jsxs)(s.p,{children:["The reserve creates a ",(0,n.jsx)(s.code,{children:"ReserveAssetDeposited"})," instruction with the amount of assets deposited to the\ndestination's sovereign account, and sends this instruction onwards to the destination. The\ndestination receives the instruction and processes it, minting the correct amount of derivative\nassets."]}),"\n",(0,n.jsx)(s.h3,{id:"5-depositasset",children:"5. DepositAsset"}),"\n",(0,n.jsx)(s.p,{children:"The destination deposits the derivative assets minted to the receiving account."}),"\n",(0,n.jsx)(s.h3,{id:"thoughts",children:"Thoughts"}),"\n",(0,n.jsx)(s.p,{children:"The addition of a third consensus system is already a hint of the disadvantages of a reserve asset\ntransfer model. Firstly, the reserve could easily become a point of centralization when too many\nconsensus systems rely on it to be the reserve of choice for their assets. Secondly, the sheer\namount of steps required necessarily makes it more prone to errors, and as such, implementors will\nhave to consider more possible pitfalls and provide technical support accordingly when an end user\nencounters issues arising from these steps. Last, but not least, either the source or destination\ncan opt to designate multiple consensus systems to be their reserves. In such a situation, care must\nbe taken in order to ensure that the sovereign accounts on the reserves are balanced, so that one\ndoesn't get drained while the others still contain a healthy balance."}),"\n",(0,n.jsx)(s.h3,{id:"a-note-on-trust",children:"A note on trust"}),"\n",(0,n.jsx)(s.p,{children:"We mentioned that reserve-backed transfers require the sender and the destination to trust a third\nparty, the reserve, and not each other. This is true, but it doesn't mean the sender and destination\nhave to trust ONLY the reserve, they also have to trust the issuer of the token. Whenever you are\ndealing with a particular asset, you are always trusting the issuer of said asset, because at any\npoint they could mint a huge amount of that asset, wreaking havoc. You have to make sure you trust\nthe asset, based on the security mechanisms used to protect its issuance. For this reason, reserves\nwork best when they are the issuers of the asset being transacted. In that scenario, you only have\nto trust the reserve, period."}),"\n",(0,n.jsx)(s.h2,{id:"example",children:"Example"}),"\n",(0,n.jsx)(s.p,{children:"We'll create a program for the scenario in the diagram. Let's assume that the reserve is a relay\nchain and both source and destination are parachains 1 and 2 respectively. Let's also say that an\naccount ALICE in parachain 1 wants to transfer the relay chain's native token to their other account\n(also ALICE) on parachain 2. The program might look like this:"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-rust",children:"let message = Xcm(vec![\n  WithdrawAsset((Parent, amount).into()),\n  InitiateReserveWithdraw {\n    assets: All.into(),\n    reserve: Parent.into(),\n    xcm: Xcm(vec![DepositReserveAsset {\n      assets: All.into(),\n      dest: Parachain(2).into(),\n      xcm: Xcm(vec![DepositAsset {\n        assets: All.into(),\n        beneficiary: AccountId32 { id: ALICE.into(), network: None }.into(),\n      }]),\n    }]),\n  },\n]);\n"})}),"\n",(0,n.jsxs)(s.p,{children:["This program should be executed on the source, so on parachain 1. We start, as usual, with a\n",(0,n.jsx)(s.code,{children:"WithdrawAsset"})," instruction. The ",(0,n.jsx)(s.code,{children:"MultiAsset"})," here references the relay chain's native token, which\nmeans we'll be gathering the derivative on this chain."]}),"\n",(0,n.jsx)(s.h3,{id:"initiatereservewithdraw",children:"InitiateReserveWithdraw"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-rust",children:"InitiateReserveWithdraw { assets: MultiAssetFilter, reserve: MultiLocation, xcm: Xcm<()> }\n"})}),"\n",(0,n.jsxs)(s.p,{children:["The ",(0,n.jsx)(s.code,{children:"InitiateReserveWithdraw"})," instruction takes the derivative token from the holding register and\nburns it. Then it sends a new XCM to the specified ",(0,n.jsx)(s.code,{children:"reserve"}),", in this example, the relay chain. This\nnew XCM contains the following instructions, in order:"]}),"\n",(0,n.jsxs)(s.ol,{children:["\n",(0,n.jsx)(s.li,{children:"WithdrawAsset"}),"\n",(0,n.jsx)(s.li,{children:"ClearOrigin"}),"\n",(0,n.jsxs)(s.li,{children:["All instructions specified in the ",(0,n.jsx)(s.code,{children:"xcm"})," operand, in this case ",(0,n.jsx)(s.code,{children:"DepositReserveAsset"})]}),"\n"]}),"\n",(0,n.jsxs)(s.p,{children:["As was the case with ",(0,n.jsx)(s.a,{href:"/docs/learn/xcm/journey/transfers-teleport",children:"teleports"}),", instructions 1. and 2. are added automatically by\nthe executor when using ",(0,n.jsx)(s.code,{children:"InitiateReserveWithdraw"}),"."]}),"\n",(0,n.jsx)(s.p,{children:"Upon receiving this XCM, the reserve will withdraw the asset from parachain 1's sovereign account\n(where the real asset is stored), and deposit it on parachain 2's sovereign account."}),"\n",(0,n.jsx)(s.h3,{id:"depositreserveasset",children:"DepositReserveAsset"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-rust",children:"DepositReserveAsset { assets: MultiAssetFilter, dest: MultiLocation, xcm: Xcm<()> }\n"})}),"\n",(0,n.jsxs)(s.p,{children:["This instruction is used in this example instead of ",(0,n.jsx)(s.code,{children:"DepositAsset"}),", because as well as depositing\nthe assets to parachain 2's sovereign account, this instruction will send another XCM to\nparachain 2. This new XCM has the following instructions:"]}),"\n",(0,n.jsxs)(s.ol,{children:["\n",(0,n.jsx)(s.li,{children:"ReserveAssetDeposited"}),"\n",(0,n.jsx)(s.li,{children:"ClearOrigin"}),"\n",(0,n.jsxs)(s.li,{children:["All instructions specified in the ",(0,n.jsx)(s.code,{children:"xcm"})," operand, in this case, only ",(0,n.jsx)(s.code,{children:"DepositAsset"})]}),"\n"]}),"\n",(0,n.jsx)(s.h3,{id:"reserveassetdeposited",children:"ReserveAssetDeposited"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-rust",children:"ReserveAssetDeposited(MultiAssets)\n"})}),"\n",(0,n.jsxs)(s.p,{children:["Parachain 2 receives the XCM, mints new derivative tokens and deposit them locally to the\nbeneficiary account. ",(0,n.jsx)(s.code,{children:"ReserveAssetDeposited"})," is a ",(0,n.jsx)(s.em,{children:"trusted indication"}),". As is the case with\nteleporting, you need to trust the reserve to have actually put the specified amount of assets in\nthe sovereign account of this system. You can specify which systems you trust as reserves for which\nassets by configuring the ",(0,n.jsx)(s.a,{href:"/docs/learn/xcm/config-deep-dive",children:"IsReserve"})," type in the executor. In our\nexample, both parachains trust the relay chain as a reserve for its own native token."]}),"\n",(0,n.jsx)(s.h2,{id:"another-example",children:"Another example"}),"\n",(0,n.jsx)(s.p,{children:"We now know this type of transfers requires 3 actors: the source, the reserve, and the destination.\nHowever, the source and reserve don't have to be different systems, they could be one and the same,\nas in the following diagram."}),"\n",(0,n.jsx)(s.p,{children:(0,n.jsx)(s.img,{alt:"Source is reserve",src:t(91946).A+"",width:"805",height:"271"})}),"\n",(0,n.jsx)(s.p,{children:"In this case the message is the following:"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-rust",children:"let message = Xcm(vec![\n  WithdrawAsset((Parent, amount).into()),\n  DepositReserveAsset {\n    assets: All.into(),\n    dest: Parachain(2).into(),\n    xcm: Xcm(vec![DepositAsset {\n      assets: All.into(),\n      beneficiary: AccountId32 { id: ALICE.into(), network: None }.into(),\n    }]),\n  },\n]);\n"})}),"\n",(0,n.jsx)(s.p,{children:"This simplifies the reserve-backed transfer. However, the destination still needs to:"}),"\n",(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsx)(s.li,{children:"Recognize the source as the proper reserve for the tokens that are being sent over and"}),"\n",(0,n.jsx)(s.li,{children:"Support minting derivatives of the tokens being sent over"}),"\n"]}),"\n",(0,n.jsxs)(s.p,{children:["It's also possible to skip the ",(0,n.jsx)(s.code,{children:"WithdrawAsset"})," instruction. The ",(0,n.jsx)(s.code,{children:"TransferReserveAsset"})," instruction\nhandles the withdrawal already. It can be called like so:"]}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-rust",children:"let message = Xcm(vec![\n  TransferReserveAsset {\n    assets: (Parent, amount).into(),\n    dest: Parachain(2).into(),\n    xcm: Xcm(vec![DepositAsset {\n      assets: All.into(),\n      beneficiary: AccountId32 { id: ALICE.into(), network: None }.into(),\n    }]),\n  },\n]);\n"})}),"\n",(0,n.jsx)(s.h3,{id:"another-note-on-trust",children:"Another note on trust"}),"\n",(0,n.jsx)(s.p,{children:"In this model, where the sender is the reserve, the destination is trusting the sender entirely.\nIt's the sender the one who doesn't need to trust the destination, since it'll ever only be minting\nderivatives anyway, the sender/reserve controls the real assets and issuance."}),"\n",(0,n.jsx)(s.h2,{id:"next-steps",children:"Next steps"}),"\n",(0,n.jsxs)(s.p,{children:["Next, we'll talk about a very important topic we mentioned before but skipped in this chapter,\n",(0,n.jsx)(s.a,{href:"../fees/index.html",children:"paying fees"})," for the effects our XCMs have."]})]})}function l(e={}){const{wrapper:s}={...(0,r.R)(),...e.components};return s?(0,n.jsx)(s,{...e,children:(0,n.jsx)(c,{...e})}):c(e)}},29660:(e,s,t)=>{t.d(s,{A:()=>n});const n=t.p+"assets/images/reserve_asset_transfer-14d4ab3d815e04d0a6286921abe6007c.png"},91946:(e,s,t)=>{t.d(s,{A:()=>n});const n=t.p+"assets/images/source_is_reserve-78e1a6fa98531fdfa5bcdf518c116a1b.png"},28453:(e,s,t)=>{t.d(s,{R:()=>a,x:()=>o});var n=t(96540);const r={},i=n.createContext(r);function a(e){const s=n.useContext(i);return n.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function o(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),n.createElement(i.Provider,{value:s},e.children)}}}]);