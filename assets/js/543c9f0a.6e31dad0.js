"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[566],{30644:(e,o,t)=>{t.r(o),t.d(o,{assets:()=>c,contentTitle:()=>r,default:()=>d,frontMatter:()=>s,metadata:()=>i,toc:()=>l});var n=t(74848),a=t(28453);const s={id:"build-guides-coretime-troubleshoot",title:"Coretime Troubleshooting FAQ",sidebar_label:"Troubleshooting FAQ",description:"FAQ on issues related to using coretime and testing/deploying parachains using Polkadot SDK",keywords:["coretime","blockspace","parathread","parachain","cores","coretime","agile"],slug:"../build-guides-coretime-troubleshoot"},r=void 0,i={id:"build/build-guides-coretime-troubleshoot",title:"Coretime Troubleshooting FAQ",description:"FAQ on issues related to using coretime and testing/deploying parachains using Polkadot SDK",source:"@site/../docs/build/build-guides-coretime-troubleshoot.md",sourceDirName:"build",slug:"/build-guides-coretime-troubleshoot",permalink:"/docs/build-guides-coretime-troubleshoot",draft:!1,unlisted:!1,tags:[],version:"current",lastUpdatedBy:"github-actions[bot]",lastUpdatedAt:17161828e5,frontMatter:{id:"build-guides-coretime-troubleshoot",title:"Coretime Troubleshooting FAQ",sidebar_label:"Troubleshooting FAQ",description:"FAQ on issues related to using coretime and testing/deploying parachains using Polkadot SDK",keywords:["coretime","blockspace","parathread","parachain","cores","coretime","agile"],slug:"../build-guides-coretime-troubleshoot"},sidebar:"docs",previous:{title:"Parachain Template Guide",permalink:"/docs/build-guides-template-basic"},next:{title:"Bridges",permalink:"/docs/learn-bridges"}},c={},l=[{value:"FAQ / Troubleshooting",id:"faq--troubleshooting",level:2},{value:"Why do I have to sync Rococo locally? Can&#39;t I just use a remote, trusted node and connect to that?",id:"why-do-i-have-to-sync-rococo-locally-cant-i-just-use-a-remote-trusted-node-and-connect-to-that",level:3},{value:"Is there a faster way to sync Rococo? Why not warp sync?",id:"is-there-a-faster-way-to-sync-rococo-why-not-warp-sync",level:3},{value:"My collator is not producing blocks",id:"my-collator-is-not-producing-blocks",level:3},{value:"I want to run more than one collator, how do I do that?",id:"i-want-to-run-more-than-one-collator-how-do-i-do-that",level:3},{value:"Why do we only have one collator in the parachain guides on the Wiki? Isn&#39;t it better to have more?",id:"why-do-we-only-have-one-collator-in-the-parachain-guides-on-the-wiki-isnt-it-better-to-have-more",level:3},{value:"Why are we registering parathreads and not parachains?",id:"why-are-we-registering-parathreads-and-not-parachains",level:3}];function h(e){const o={a:"a",code:"code",em:"em",h2:"h2",h3:"h3",hr:"hr",li:"li",p:"p",strong:"strong",ul:"ul",...(0,a.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(o.p,{children:"This page aims to cover and aggregate various resources that relate to troubleshooting common\nproblems when using the Polkadot SDK or deploying on a core."}),"\n",(0,n.jsx)(o.h2,{id:"faq--troubleshooting",children:"FAQ / Troubleshooting"}),"\n",(0,n.jsx)(o.h3,{id:"why-do-i-have-to-sync-rococo-locally-cant-i-just-use-a-remote-trusted-node-and-connect-to-that",children:"Why do I have to sync Rococo locally? Can't I just use a remote, trusted node and connect to that?"}),"\n",(0,n.jsxs)(o.p,{children:[(0,n.jsx)(o.strong,{children:"A:"})," You can remotely connect to Rococo network via the --relay-chain-rpc-urls flag, which can be\npassed to your node. Unfortunately, the caveat is you can't use this node for collation at this\ntime - meaning if you intend on being a collator/validator for your blockchain and intend to create\nblocks, you need to sync the chain locally."]}),"\n",(0,n.jsx)(o.hr,{}),"\n",(0,n.jsx)(o.h3,{id:"is-there-a-faster-way-to-sync-rococo-why-not-warp-sync",children:"Is there a faster way to sync Rococo? Why not warp sync?"}),"\n",(0,n.jsxs)(o.p,{children:[(0,n.jsx)(o.strong,{children:"A:"})," Warp sync is currently not possible on Rococo or Westend.\n",(0,n.jsx)(o.a,{href:"https://substrate.stackexchange.com/questions/9730/rococo-cant-warp-sync-stuck-at-16mb-finality-proof-download",children:"See this answer for more context."}),".\nHowever, ",(0,n.jsx)(o.code,{children:"--chain=rococo\u2014-sync fast-unsafe"})," should provide a faster way to sync with the relay chain\nby skipping downloading state proofs and just verifying the block headers."]}),"\n",(0,n.jsx)(o.hr,{}),"\n",(0,n.jsx)(o.h3,{id:"my-collator-is-not-producing-blocks",children:"My collator is not producing blocks"}),"\n",(0,n.jsxs)(o.p,{children:[(0,n.jsx)(o.strong,{children:"A:"})," Check these sanity checklists:"]}),"\n",(0,n.jsxs)(o.ul,{children:["\n",(0,n.jsx)(o.li,{children:(0,n.jsx)(o.a,{href:"https://substrate.stackexchange.com/questions/178/how-can-i-get-my-parachain-to-produce-blocks-sanity-checklist",children:"https://substrate.stackexchange.com/questions/178/how-can-i-get-my-parachain-to-produce-blocks-sanity-checklist"})}),"\n",(0,n.jsx)(o.li,{children:(0,n.jsx)(o.a,{href:"https://substrate.stackexchange.com/questions/1394/our-parachain-doesnt-produce-blocks-checklist",children:"https://substrate.stackexchange.com/questions/1394/our-parachain-doesnt-produce-blocks-checklist"})}),"\n"]}),"\n",(0,n.jsx)(o.hr,{}),"\n",(0,n.jsx)(o.h3,{id:"i-want-to-run-more-than-one-collator-how-do-i-do-that",children:"I want to run more than one collator, how do I do that?"}),"\n",(0,n.jsxs)(o.p,{children:[(0,n.jsx)(o.strong,{children:"A:"})," Ideally, you would want to run these on separate machines/servers, but you could as long as\nyou ensure you can provide different RPC/WebSocket and P2P ports for each collator. You also may\nneed to sync a separate instance of Rococo for each collator on the same machine. You also will need\nto choose the block production mechanism like\n",(0,n.jsx)(o.a,{href:"https://substrate.stackexchange.com/questions/5572/production-like-parachain-setup-and-launch",children:"Aura"}),"."]}),"\n",(0,n.jsx)(o.hr,{}),"\n",(0,n.jsx)(o.h3,{id:"why-do-we-only-have-one-collator-in-the-parachain-guides-on-the-wiki-isnt-it-better-to-have-more",children:"Why do we only have one collator in the parachain guides on the Wiki? Isn't it better to have more?"}),"\n",(0,n.jsxs)(o.p,{children:[(0,n.jsx)(o.strong,{children:"A:"})," Mostly for simplicity. If we have more than one collator, we would have to also spin it up,\nwhich would be a hassle on a single machine (it is possible though). Of course, if you had an actual\nnetwork with multiple collators, it is assumed you'd have separate VPS/servers for each."]}),"\n",(0,n.jsx)(o.hr,{}),"\n",(0,n.jsx)(o.h3,{id:"why-are-we-registering-parathreads-and-not-parachains",children:"Why are we registering parathreads and not parachains?"}),"\n",(0,n.jsxs)(o.p,{children:[(0,n.jsx)(o.strong,{children:"A:"})," When registering a parachain on a relay chain, they are assigned a ",(0,n.jsx)(o.code,{children:"ParaID"}),", and they are\nreferred to as Parathreads till they start producing blocks. ",(0,n.jsx)(o.em,{children:"Parathreads"})," are a bit of an outdated\nterm now. They refer to what are now known as on-demand parachains. Although they be references in\nvarious places through PolkadotJS, docs, or other UIs, really we only have two types of parachain:\non-demand parachains, and parachains which use bulk coretime."]}),"\n",(0,n.jsx)(o.hr,{})]})}function d(e={}){const{wrapper:o}={...(0,a.R)(),...e.components};return o?(0,n.jsx)(o,{...e,children:(0,n.jsx)(h,{...e})}):h(e)}},28453:(e,o,t)=>{t.d(o,{R:()=>r,x:()=>i});var n=t(96540);const a={},s=n.createContext(a);function r(e){const o=n.useContext(s);return n.useMemo((function(){return"function"==typeof e?e(o):{...o,...e}}),[o,e])}function i(e){let o;return o=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:r(e.components),n.createElement(s.Provider,{value:o},e.children)}}}]);