"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[6646],{18428:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>l,contentTitle:()=>i,default:()=>c,frontMatter:()=>r,metadata:()=>d,toc:()=>o});var t=s(74848),a=s(28453);const r={id:"hydration-dashboards",title:"Hydration Dashboards",sidebar_label:"Hydration",description:"Hydration is a decentralized finance hub on Polkadot. Its main function is a DEX.",keywords:["polkadot","dashboard","dune","hydration","DeFi"],slug:"../hydration-dashboards"},i="Hydration Dashboards",d={id:"general/dune-analytics/parachain-dashboards/hydration-dashboards",title:"Hydration Dashboards",description:"Hydration is a decentralized finance hub on Polkadot. Its main function is a DEX.",source:"@site/../docs/general/dune-analytics/parachain-dashboards/hydration-dashboards.md",sourceDirName:"general/dune-analytics/parachain-dashboards",slug:"/general/dune-analytics/hydration-dashboards",permalink:"/docs/general/dune-analytics/hydration-dashboards",draft:!1,unlisted:!1,tags:[],version:"current",lastUpdatedBy:"MK",lastUpdatedAt:1719215716e3,frontMatter:{id:"hydration-dashboards",title:"Hydration Dashboards",sidebar_label:"Hydration",description:"Hydration is a decentralized finance hub on Polkadot. Its main function is a DEX.",keywords:["polkadot","dashboard","dune","hydration","DeFi"],slug:"../hydration-dashboards"}},l={},o=[{value:"Overview",id:"overview",level:2},{value:"Featured Dashboards on Dune",id:"featured-dashboards-on-dune",level:2},{value:"Key Tables",id:"key-tables",level:2},{value:"Useful Queries",id:"useful-queries",level:2},{value:"Getting Started with Queries",id:"getting-started-with-queries",level:2}];function h(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,a.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"hydration-dashboards",children:"Hydration Dashboards"})}),"\n",(0,t.jsx)(n.h2,{id:"overview",children:"Overview"}),"\n",(0,t.jsx)(n.p,{children:"Hydration, formerly known as HydraDX, is a decentralized finance hub on Polkadot. It offers several\ntypes of DEX pools:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Omnipool: a single liquidity pool for assets that have been vetted by governance. Typically, these\nwould be currencies that have existed for a while and are expected to generate a high volume of\ntrades."}),"\n",(0,t.jsx)(n.li,{children:"Stable pools: pools where all coins in the same pool are expected to trade almost at the same\nprice, e.g. USDC/USDT."}),"\n",(0,t.jsx)(n.li,{children:"xyk-pools: pools where the price of the assets is determined by the x * y = k formula, also known\nas the constant product formula."}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"Users can swap from any asset to any other asset using an automated router that will calculate the\nmost efficient path."}),"\n",(0,t.jsx)(n.p,{children:"Liquidity providers can earn fees from the trades in the pools they provide liquidity to."}),"\n",(0,t.jsx)(n.h2,{id:"featured-dashboards-on-dune",children:"Featured Dashboards on Dune"}),"\n",(0,t.jsx)(n.p,{children:"Here you will find a variety of dashboards that help visualize data from the Hydration parachain:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:"https://dune.com/substrate/hydradx",children:"hydration on Polkadot"}),": This dashboard provides a\ncomprehensive view of DEX volumes and liquidity on the Hydration parachain."]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"key-tables",children:"Key Tables"}),"\n",(0,t.jsx)(n.p,{children:"Data from the hydration parachain is organized into several key tables:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"hydradx.balances"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"hydradx.blocks"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"hydradx.calls"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"hydradx.events"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"hydradx.extrinsics"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"hydradx.transfers"})}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"hydradx.traces"})," table is created by a snapshot script utilizing Hydration API calls to fetch\naccurate values which would be difficult to calculate from the blockchain events alone."]}),"\n",(0,t.jsxs)(n.p,{children:["Start building your own queries using granular data on Dune\n",(0,t.jsx)(n.a,{href:"https://dune.com/queries?category=canonical&namespace=hydradx",children:"here"}),"."]}),"\n",(0,t.jsx)(n.h2,{id:"useful-queries",children:"Useful Queries"}),"\n",(0,t.jsx)(n.p,{children:"Some useful queries for Hydration are made available as materialized views."}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Subject Area"}),(0,t.jsx)(n.th,{children:"Query"}),(0,t.jsx)(n.th,{children:"Materialized View"}),(0,t.jsx)(n.th,{children:"Description"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"Oracle"}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.a,{href:"https://dune.com/queries/3459562",children:"query_3459562"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"dune.substrate.result_hydradx_oracle"})}),(0,t.jsx)(n.td,{children:"Provides hourly oracle values for all currencies present in the omnipool. Uses LRNA."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"Oracle (Alt.)"}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.a,{href:"https://dune.com/queries/3573146",children:"query_3573146"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"dune.substrate.result_hydra_dx_oracle_new"})}),(0,t.jsx)(n.td,{children:"Provides hourly oracle values for all currencies present in the omnipool. Uses DOT."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"Oracle (Alt. Daily)"}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.a,{href:"https://dune.com/queries/3445402",children:"query_3445402"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"dune.substrate.result_hydra_dx_oracle_new_daily"})}),(0,t.jsx)(n.td,{children:"Same, but aggregated daily."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"Oracle Pairs"}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.a,{href:"https://dune.com/queries/3483707",children:"query_3483707"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"dune.substrate.result_hydra_dx_oracle_pairs"})}),(0,t.jsx)(n.td,{children:"Provides volume and transaction counts for all pairwise trades in the omnipool."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"Omnipool Liquidity"}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.a,{href:"https://dune.com/queries/3507194",children:"query_3507194"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"dune.substrate.result_hydradx_liquidity_master"})}),(0,t.jsx)(n.td,{children:"Provides liquidity in the Omnipool on a per-account basis."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"Assets"}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.a,{href:"https://dune.com/queries/3482301",children:"query_3482301"})}),(0,t.jsx)(n.td,{children:"N/A"}),(0,t.jsx)(n.td,{children:"Provides asset_id, symbol, and decimals for all assets in the Hydration parachain."})]})]})]}),"\n",(0,t.jsx)(n.p,{children:"The first Oracle query is the recommended one to use for any oracle use cases that are not\nhistorical in nature. This is because it relies on the most reliable mechanism for determining the\nactual price, using the intermediate LRNA token price. This level of detail is only available from\nJan. 2024 onwards."}),"\n",(0,t.jsx)(n.p,{children:"For historical price analysis, the alternative oracle query uses DOT as the intermediate currency.\nIt may be slightly less accurate and take a bit longer to calculate."}),"\n",(0,t.jsx)(n.p,{children:"Liquidity in the Omnipool is calculated on a per-account basis, using the NFT positions that\nrepresent shares in the Omnipool."}),"\n",(0,t.jsx)(n.p,{children:"Dune users are encouraged to study the source code of the queries, including parts of a query that\nmay have been commented out for future use."}),"\n",(0,t.jsx)(n.p,{children:"Uncommenting these parts may accelerate your effort of adopting a query to a slightly different use\ncase."}),"\n",(0,t.jsx)(n.h2,{id:"getting-started-with-queries",children:"Getting Started with Queries"}),"\n",(0,t.jsx)(n.p,{children:"To get started with querying data from Hydration, you are welcome to use the mentioned materialized\nqueries. You can also use the following DuneSQL queries as examples:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sql",metastring:'title="Hydration Omnipool Asset (Latest)" showLineNumbers',children:"WITH MaxTimestamps AS (\n  SELECT\n    CAST(JSON_VALUE(kv, 'strict $.id') AS INT) AS asset_id,\n    MAX(ts) AS max_ts\n  FROM hydradx.traces\n  WHERE track = 'omniasset'\n  GROUP BY 1\n), A AS (\n  SELECT\n    m.asset_id,\n    A1.ticker,\n    A1.decimals,\n    m.max_ts AS ts,\n    CAST(JSON_VALUE(t.pv, 'strict $.cap') AS UINT256) AS cap,\n    CAST(JSON_VALUE(t.pv, 'strict $.hubReserve') AS UINT256) AS hubReserve,\n    CAST(JSON_VALUE(t.pv, 'strict $.protocolShares') AS UINT256) AS protocolShares,\n    CAST(JSON_VALUE(t.pv, 'strict $.shares') AS UINT256) AS shares,\n    JSON_VALUE(t.pv, 'strict $.tradable.bits') AS tradeable\n  FROM MaxTimestamps m\n  INNER JOIN hydradx.traces t\n    ON m.asset_id = CAST(JSON_VALUE(t.kv, 'strict $.id') AS INT)\n    AND m.max_ts = t.ts\n  JOIN query_3482301 A1\n    ON A1.asset_id = m.asset_id\n  WHERE t.track = 'omniasset'\n)\nSELECT\n  asset_id,\n  ticker,\n  ROUND(100.0 * hubReserve / (SUM(hubReserve) OVER (ORDER BY 1)), 1) AS percentage_of_pool,\n  cap / POW(10, 18) AS cap,\n  ROUND(hubReserve / POW(10, 12)) AS hubReserve,\n  ROUND(protocolShares / POW(10, decimals)) AS protocolShares,\n  ROUND(shares / POW(10, decimals)) AS shares,\n  ts AS last_update -- when this data was collected\nFROM A\nWHERE tradeable = '15' -- all bits set to \"on\"\nORDER BY 3 DESC;\n\n\n"})}),"\n",(0,t.jsxs)(n.p,{children:["The query is fairly typical for a parachain query on Dune. It calculates the last available values\nfrom the snapshot table ",(0,t.jsx)(n.code,{children:"hydradx.traces"}),"."]}),"\n",(0,t.jsx)(n.p,{children:"The query uses Dune's native UINT256 type extensively, which allows to deal with very large numbers\nand still maintain precision."}),"\n",(0,t.jsx)(n.p,{children:"Query result:"}),"\n",(0,t.jsx)("iframe",{src:"https://dune.com/embeds/3485087/5857870/",height:"350",width:"100%"}),"\n",(0,t.jsx)(n.admonition,{title:"DuneSQL Reference",type:"info",children:(0,t.jsxs)(n.p,{children:["For more information on DuneSQL, please refer to the ",(0,t.jsx)(n.a,{href:"/docs/general/dunesql-cheatsheet",children:"DuneSQL Cheatsheet"}),"\nand\n",(0,t.jsx)(n.a,{href:"https://docs.dune.com/query-engine/Functions-and-operators/index",children:"DuneSQL Official Documentation"}),"."]})})]})}function c(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(h,{...e})}):h(e)}},28453:(e,n,s)=>{s.d(n,{R:()=>i,x:()=>d});var t=s(96540);const a={},r=t.createContext(a);function i(e){const n=t.useContext(r);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:i(e.components),t.createElement(r.Provider,{value:n},e.children)}}}]);