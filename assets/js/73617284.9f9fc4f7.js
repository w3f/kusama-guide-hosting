"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[981],{26620:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>c,contentTitle:()=>s,default:()=>d,frontMatter:()=>i,metadata:()=>a,toc:()=>l});var r=o(74848),t=o(28453);const i={id:"learn-hyperbridge",title:"Hyperbridge",sidebar_label:"Hyperbridge",description:"Polkadot's Bridge to Ethereum.",keywords:["bridge","polkadot","ethereum"],slug:"../learn-hyperbridge"},s=void 0,a={id:"learn/learn-hyperbridge",title:"Hyperbridge",description:"Polkadot's Bridge to Ethereum.",source:"@site/../docs/learn/learn-hyperbridge.md",sourceDirName:"learn",slug:"/learn-hyperbridge",permalink:"/docs/learn-hyperbridge",draft:!1,unlisted:!1,tags:[],version:"current",lastUpdatedBy:"Filippo",lastUpdatedAt:1726760224e3,frontMatter:{id:"learn-hyperbridge",title:"Hyperbridge",sidebar_label:"Hyperbridge",description:"Polkadot's Bridge to Ethereum.",keywords:["bridge","polkadot","ethereum"],slug:"../learn-hyperbridge"},sidebar:"docs",previous:{title:"DOT <> KSM Bridge",permalink:"/docs/learn-dot-ksm-bridge"},next:{title:"Cross Consensus Messaging (XCM)",permalink:"/docs/learn-xcm-index"}},c={},l=[{value:"Coprocessor Model",id:"coprocessor-model",level:2},{value:"Parachain as Coprocessors",id:"parachain-as-coprocessors",level:3},{value:"Interoperable State Machine Protocol (ISMP)",id:"interoperable-state-machine-protocol-ismp",level:3},{value:"Underlying technologies",id:"underlying-technologies",level:3},{value:"Terminology",id:"terminology",level:2},{value:"State Proofs",id:"state-proofs",level:3},{value:"Consensus Proofs",id:"consensus-proofs",level:3},{value:"Resources",id:"resources",level:2}];function h(e){const n={a:"a",admonition:"admonition",blockquote:"blockquote",h2:"h2",h3:"h3",li:"li",p:"p",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.admonition,{title:"Learn about Parachain and Bridges",type:"info",children:(0,r.jsxs)(n.p,{children:["To follow the material on this page, it is recommended to be familiar with the concepts of\n",(0,r.jsx)(n.a,{href:"./learn-parachains",children:"Parachains"})," and ",(0,r.jsx)(n.a,{href:"/docs/learn-bridges",children:"Bridges"}),"."]})}),"\n",(0,r.jsxs)(n.p,{children:["Interoperability is the core vision of the Polkadot technology. Through years of blockchain\ndevelopment, much effort has been put into making a secure interoperability solution between\nblockchains. Polkadot provides secure interoperability between parachains through its\n",(0,r.jsx)(n.a,{href:"/docs/learn-xcm",children:"Cross-Consensus Messaging (XCM)"}),", and\n",(0,r.jsx)(n.a,{href:"/docs/learn-xcm-transport#xcmp-cross-chain-message-passing",children:"Cross-Chain Message Passing (XCMP)"}),"\nprotocol. However, these solutions work when there is a shared security. In the case of interaction\nbetween chains that do not belong to the same Polkadot's shared security, bridges are needed."]}),"\n",(0,r.jsx)(n.p,{children:"Hyperbridge (short for hyper-scalable bridge) is innovated as a cross-chain solution built as an\ninteroperability coprocessor. Hyperbridge is crafted to scale cryptographically secure, consensus,\nand state-proof-based interoperability across all blockchains."}),"\n",(0,r.jsx)(n.h2,{id:"coprocessor-model",children:"Coprocessor Model"}),"\n",(0,r.jsxs)(n.p,{children:["Ensuring secure cross-chain communication involves the meticulous verification of various aspects,\nincluding: ",(0,r.jsx)(n.a,{href:"https://wiki.polkadot.network/docs/learn-consensus",children:"Consensus Mechanisms"}),",\n",(0,r.jsx)(n.a,{href:"https://research.polytope.technology/consensus-proofs",children:"Consensus Faults"}),",\n",(0,r.jsx)(n.a,{href:"https://research.polytope.technology/state-machine-proofs",children:"State Proofs"})," and\n",(0,r.jsx)(n.a,{href:"https://wiki.polkadot.network/docs/learn-parachains#state-transitions",children:"State Transitions"}),"."]}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsx)(n.p,{children:"What is a coprocessor?"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Coprocessor"}),", in the context of hardware, can be referred to as a microprocessor designed to\nsupplement the capabilities of the primary processor. For example, a GPU is a coprocessor of the\nCPU to be optimized for graphical and simultaneous computation."]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Due to the complexity and expensiveness of the onchain verification process, in the coprocessor\nmodel, the computation is performed off-chain. The execution outcomes and cryptographic proofs\nvalidating their accuracy are subsequently presented on-chain."}),"\n",(0,r.jsxs)(n.p,{children:["Expanding more about the coprocessor model, it has been applied in other solutions of offloading\ncryptographic computation as well, particularly\n",(0,r.jsx)(n.a,{href:"https://orochi.network/blog/Exploring-ZK-Coprocessor-What-Comes-Next",children:(0,r.jsx)(n.strong,{children:"Zero-knowledge (ZK) coprocessor"})}),"\nor ",(0,r.jsx)(n.a,{href:"https://www.di.ens.fr/~nitulesc/files/Survey-SNARKs.pdf",children:"SNARK circuit"}),"."]}),"\n",(0,r.jsx)(n.h3,{id:"parachain-as-coprocessors",children:"Parachain as Coprocessors"}),"\n",(0,r.jsxs)(n.p,{children:["By leveraging the cost-effective consensus proofs facilitated by\n",(0,r.jsx)(n.a,{href:"https://spec.polkadot.network/sect-finality#sect-grandpa-beefy",children:"BEEFY"}),", Hyperbridge affirms the\nlegitimacy of all parachain state transitions safeguarded by the network."]}),"\n",(0,r.jsxs)(n.p,{children:["This capability enables the distribution of the validation workload for consensus, state proofs, and\nstate transition re-execution across various designated\n",(0,r.jsx)(n.a,{href:"/docs/polkadot-direction#polkadot-as-a-computational-resource",children:"Parachain Cores"}),". Hence,\nPolkadot is utilized by Hyperbridge as a verifiable computation layer to provide the\n",(0,r.jsx)(n.a,{href:"https://blog.polytope.technology/introducing-hyperbridge-interoperability-coprocessor#full-node-level-security",children:'"Full Node Security"'}),"\nin cross-chain bridges."]}),"\n",(0,r.jsxs)(n.p,{children:["Hence, an additional layer of security is provided, allowing Hyperbridge to detect and prevent\n",(0,r.jsx)(n.a,{href:"https://en.wikipedia.org/wiki/Byzantine_fault",children:"Byzantine"})," behaviors across connected chains."]}),"\n",(0,r.jsx)(n.h3,{id:"interoperable-state-machine-protocol-ismp",children:"Interoperable State Machine Protocol (ISMP)"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.a,{href:"https://blog.polytope.technology/introducing-hyperbridge-interoperability-coprocessor",children:"Interoperable State Machine Protocol (ISMP)"}),"\nprovides a familiar HTTP-like API for developers who want to make cross-chain requests to trigger\ncertain logic on the counterparty chain. It allows POST requests to send arbitrary data to connected\nchains and GET requests to read the storage (verified through state proofs) of applications on\nconnected chains."]}),"\n",(0,r.jsx)(n.p,{children:"In addition to facilitating cross-chain message passing among connected chains, ISMP also serves as\na synchronization primitive across Hyperbridge's internal state machines. This enables its parachain\ncores to communicate with each other and delegate tasks."}),"\n",(0,r.jsx)(n.h3,{id:"underlying-technologies",children:"Underlying technologies"}),"\n",(0,r.jsx)(n.p,{children:"The underlying technologies of the Hyperbridge are integrated with:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://eprint.iacr.org/2019/953.pdf",children:"PLONK verifier"}),": The PLONK Verifier within Hyperbridge can\nbe likened to a sophisticated security apparatus. It operates like an expert detective,\nmeticulously ensuring the legitimacy of every transaction without compromising private details.\nContinuously enhancing its capabilities, particularly with advancements like UltraPLONK, this\nintegral component is pivotal in maintaining the utmost integrity and confidentiality of\ncross-chain communications."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://spec.polkadot.network/sect-finality#sect-grandpa-beefy",children:"BEEFY consensus"}),": The BEEFY\n(Bridge Efficiency Enabling Finality Yielder) protocol functions as a complementary system to\nGRANDPA, specifically designed to facilitate efficient bridging between the Polkadot network's\nrelay chain and external, isolated blockchains like Ethereum. Notably, BEEFY addresses the\ninteroperability challenge with blockchains not initially constructed to integrate seamlessly with\nthe Polkadot interchain framework."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://github.com/AztecProtocol/barretenberg",children:"The Barretenberg backend"}),": Within the realm of\nHyperbridge, Barretenberg functions as a powerhouse engine, adeptly managing intricate\nmathematical computations. As the backend infrastructure, it guarantees the swift, secure, and\nreliable execution of all cryptographic operations within the Hyperbridge ecosystem."]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"terminology",children:"Terminology"}),"\n",(0,r.jsx)(n.h3,{id:"state-proofs",children:"State Proofs"}),"\n",(0,r.jsx)(n.p,{children:"State proofs are a critical primitive of the blockchain stack that enables things like trustless\nbridges. These off-chain light clients can access on-chain data in a permissionless and secure\nmanner and modular blockchain architectures where the execution layer can be decoupled from the\nconsensus layer."}),"\n",(0,r.jsx)(n.h3,{id:"consensus-proofs",children:"Consensus Proofs"}),"\n",(0,r.jsx)(n.p,{children:"Consensus Proofs in a blockchain system denote the mechanism by which participants, often nodes or\nvalidators, collectively agree on the validity of new transactions or blocks. The nature of\nconsensus proofs varies across different blockchain architectures, such as Proof-of-Work,\nProof-of-Stake, or other consensus algorithms."}),"\n",(0,r.jsx)(n.p,{children:"The ultimate goal is to ensure a widespread and verifiable agreement among network participants,\nenhancing the security and reliability of the distributed ledger."}),"\n",(0,r.jsx)(n.p,{children:"For example, Consensus Proofs in a proof of stake system are given as the signatures over the latest\nblock header in the chain from a supermajority (two-thirds plus one) subset of the full authority\nset."}),"\n",(0,r.jsx)(n.h2,{id:"resources",children:"Resources"}),"\n",(0,r.jsx)(n.p,{children:"To learn more about Hyperbridge, see the resources below."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://blog.polytope.technology/introducing-hyperbridge-interoperability-coprocessor",children:"Introducing Hyperbridge: An Interoperability Coprocessor"})," -\nArticle by Seun Lanlege, Polytope Lab founder."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://medium.com/simplystaking/hyperbridge-the-new-interoperability-coprocessor-on-polkadot-b532ae622d8e",children:"Hyperbridge: The New Interoperability Coprocessor on Polkadot"})," -\nArticle by Erik from Simply Staking"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://polkadot-blockchain-academy.github.io/pba-book/blockchain-contracts/services-as-state-machines/page.html",children:"Digital Services as State Machines"})," -\nLecture about state machine from Polkadot Blockchain Academy"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://github.com/polytope-labs/hyperbridge",children:"Hyperbridge Source Code"})," - Public codebase\nrepository of hyperbridge."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://ismp.polytope.technology/",children:"Interoperable State Machine Protocol (ISMP) Book"})," - Guidebook\nof the ISMP"]}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"https://twitter.com/stakenode_dev/status/1744653040764817675",children:"The Puzzle of Blockchain Interoperability"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"https://www.youtube.com/watch?v=MCOAwooWecs",children:"ISMP, The Endgame for Parachain Interoperability | Sub0 2023"})}),"\n"]})]})}function d(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(h,{...e})}):h(e)}},28453:(e,n,o)=>{o.d(n,{R:()=>s,x:()=>a});var r=o(96540);const t={},i=r.createContext(t);function s(e){const n=r.useContext(i);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:s(e.components),r.createElement(i.Provider,{value:n},e.children)}}}]);