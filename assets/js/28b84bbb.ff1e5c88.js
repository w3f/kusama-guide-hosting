"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[9385],{15680:(e,t,n)=>{n.d(t,{xA:()=>d,yg:()=>g});var a=n(96540);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),p=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},d=function(e){var t=p(e.components);return a.createElement(s.Provider,{value:t},e.children)},u="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,s=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),u=p(n),m=r,g=u["".concat(s,".").concat(m)]||u[m]||c[m]||o;return n?a.createElement(g,i(i({ref:t},d),{},{components:n})):a.createElement(g,i({ref:t},d))}));function g(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[u]="string"==typeof e?e:r,i[1]=l;for(var p=2;p<o;p++)i[p]=n[p];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},78724:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>s,default:()=>g,frontMatter:()=>l,metadata:()=>p,toc:()=>u});var a=n(58168),r=n(98587),o=(n(96540),n(15680)),i=["components"],l={id:"build-network-overview",title:"Development Networks",sidebar_label:"Development Networks",description:"An overview of the different networks on Polkadot",keywords:["data","index","query","explorer","dashboard","dapp","uapp","app","frontend","client"],slug:"../build-network-overview"},s=void 0,p={unversionedId:"build/build-network-overview",id:"build/build-network-overview",title:"Development Networks",description:"An overview of the different networks on Polkadot",source:"@site/../docs/build/build-network-overview.md",sourceDirName:"build",slug:"/build-network-overview",permalink:"/docs/build-network-overview",draft:!1,tags:[],version:"current",lastUpdatedBy:"github-actions[bot]",lastUpdatedAt:1717993655,formattedLastUpdatedAt:"Jun 10, 2024",frontMatter:{id:"build-network-overview",title:"Development Networks",sidebar_label:"Development Networks",description:"An overview of the different networks on Polkadot",keywords:["data","index","query","explorer","dashboard","dapp","uapp","app","frontend","client"],slug:"../build-network-overview"},sidebar:"docs",previous:{title:"Polkadot Developer Portal",permalink:"/docs/build-guide"},next:{title:"Client-side Development",permalink:"/docs/build-client-index"}},d={},u=[{value:"Polkadot Ecosystem Networks",id:"polkadot-ecosystem-networks",level:2},{value:"Interfacing - PolkadotJS",id:"interfacing---polkadotjs",level:2},{value:"Testnet Faucets",id:"testnet-faucets",level:2}],c={toc:u},m="wrapper";function g(e){var t=e.components,n=(0,r.A)(e,i);return(0,o.yg)(m,(0,a.A)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,o.yg)("p",null,"While Polkadot itself is the mainnet, there are several networks that can cater to different\ndevelopment or application-driven contexts."),(0,o.yg)("admonition",{title:"Looking for faucets?",type:"info"},(0,o.yg)("p",{parentName:"admonition"},(0,o.yg)("a",{parentName:"p",href:"/docs/learn-DOT#obtaining-testnet-tokens"},"See here for all available faucets and how to obtain testnet tokens."))),(0,o.yg)("h2",{id:"polkadot-ecosystem-networks"},"Polkadot Ecosystem Networks"),(0,o.yg)("ul",null,(0,o.yg)("li",{parentName:"ul"},"Mainnet: ",(0,o.yg)("strong",{parentName:"li"},"Polkadot")),(0,o.yg)("li",{parentName:"ul"},"Canary network: ",(0,o.yg)("strong",{parentName:"li"},"Kusama"),(0,o.yg)("ul",{parentName:"li"},(0,o.yg)("li",{parentName:"ul"},(0,o.yg)("a",{parentName:"li",href:"https://kusama.network/"},"Kusama")," is a value-bearing canary network that gets features before\nPolkadot does. ",(0,o.yg)("em",{parentName:"li"},"Expect Chaos"),"."))),(0,o.yg)("li",{parentName:"ul"},"Official testnets:",(0,o.yg)("ul",{parentName:"li"},(0,o.yg)("li",{parentName:"ul"},(0,o.yg)("strong",{parentName:"li"},"Westend")," - Functionality equal to the current Polkadot mainnet, with possible next-generation\ntesting of features from time to time that will eventually migrate onto Polkadot. Perma-testnet\n(is not reset back to genesis block)."),(0,o.yg)("li",{parentName:"ul"},(0,o.yg)("strong",{parentName:"li"},"Paseo")," - A community-run testnet which mirrors the Polkadot runtime. It is maintained by the\ncommunity."),(0,o.yg)("li",{parentName:"ul"},(0,o.yg)("strong",{parentName:"li"},"Rococo")," - Parachains and XCM testnet. Occasionally reset (started over again with a new\ngenesis block)."),(0,o.yg)("li",{parentName:"ul"},(0,o.yg)("strong",{parentName:"li"},"Contracts")," - Wasm-based Smart Contract enabled parachain testnet on Rococo, primarily for\n",(0,o.yg)("a",{parentName:"li",href:"https://use.ink/"},(0,o.yg)("inlineCode",{parentName:"a"},"ink!"))," development.")))),(0,o.yg)("p",null,"Kusama mainnet has been\nrunning since August 2019\nand has ",(0,o.yg)("a",{parentName:"p",href:"/docs/learn-implementations"},"implementations in various programming languages"),"\nranging from Rust to JavaScript. The leading implementation is built in Rust and uses the Substrate\nframework."),(0,o.yg)("p",null,"Tooling is rapidly evolving to interact with the network; there are many ways to get started!"),(0,o.yg)("p",null,"But before you jump head-first into the code, you should consider the ",(0,o.yg)("em",{parentName:"p"},"kind")," of decentralized\napplication you want to make and understand the different paradigms available to developers who want\nto build on Kusama."),(0,o.yg)("h2",{id:"interfacing---polkadotjs"},"Interfacing - PolkadotJS"),(0,o.yg)("p",null,"PolkadotJS is the most widely used developer tool in the Polkadot ecosystem. It provides a web app\nto interact with various parachains, nodes, and their RPCs, as well as a Javascript API for use\nwithin front-end contexts. You can view more on PolkadotJS and its resources\n",(0,o.yg)("a",{parentName:"p",href:"https://polkadot.js.org/"},"here"),"."),(0,o.yg)("p",null,"For other programmatic ways of interacting with these networks (including PolkadotJS), please view\nthe ",(0,o.yg)("a",{parentName:"p",href:"/docs/build-node-interaction"},"Node Interactions page"),"."),(0,o.yg)("h2",{id:"testnet-faucets"},"Testnet Faucets"),(0,o.yg)("p",null,"Almost all tesnets either have a web-based interface for getting test currency or a Matrix room\nwhich you can post ",(0,o.yg)("inlineCode",{parentName:"p"},"!drip <ADDRESS>")),(0,o.yg)("p",null,(0,o.yg)("a",{parentName:"p",href:"/docs/learn-DOT#obtaining-testnet-tokens"},"See here for all available faucets and how to obtain testnet tokens.")))}g.isMDXComponent=!0}}]);