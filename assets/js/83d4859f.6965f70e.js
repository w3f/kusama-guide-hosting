"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[8757],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>f});var r=n(67294);function s(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){s(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,s=function(e,t){if(null==e)return{};var n,r,s={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(s[n]=e[n]);return s}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(s[n]=e[n])}return s}var l=r.createContext({}),u=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=u(e.components);return r.createElement(l.Provider,{value:t},e.children)},m="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,s=e.mdxType,a=e.originalType,l=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),m=u(n),d=s,f=m["".concat(l,".").concat(d)]||m[d]||p[d]||a;return n?r.createElement(f,o(o({ref:t},c),{},{components:n})):r.createElement(f,o({ref:t},c))}));function f(e,t){var n=arguments,s=t&&t.mdxType;if("string"==typeof e||s){var a=n.length,o=new Array(a);o[0]=d;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i[m]="string"==typeof e?e:s,o[1]=i;for(var u=2;u<a;u++)o[u]=n[u];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},25310:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>l,default:()=>f,frontMatter:()=>i,metadata:()=>u,toc:()=>m});var r=n(87462),s=n(63366),a=(n(67294),n(3905)),o=["components"],i={id:"learn-xcm-docs-transfers-summary",title:"Transfers",sidebar_label:"Summary",description:"Summary about XCM Transfers.",keywords:["xcm","cross-consensus messaging","transfers"],slug:"../transfers-summary"},l="Transfers",u={unversionedId:"learn/xcm/journey/transfers/learn-xcm-docs-transfers-summary",id:"learn/xcm/journey/transfers/learn-xcm-docs-transfers-summary",title:"Transfers",description:"Summary about XCM Transfers.",source:"@site/../docs/learn/xcm/journey/transfers/summary.md",sourceDirName:"learn/xcm/journey/transfers",slug:"/learn/xcm/journey/transfers-summary",permalink:"/docs/learn/xcm/journey/transfers-summary",draft:!1,tags:[],version:"current",lastUpdatedBy:"bader y",lastUpdatedAt:1694099593,formattedLastUpdatedAt:"Sep 7, 2023",frontMatter:{id:"learn-xcm-docs-transfers-summary",title:"Transfers",sidebar_label:"Summary",description:"Summary about XCM Transfers.",keywords:["xcm","cross-consensus messaging","transfers"],slug:"../transfers-summary"}},c={},m=[{value:"WithdrawAsset",id:"withdrawasset",level:2},{value:"BuyExecution",id:"buyexecution",level:2},{value:"DepositAsset",id:"depositasset",level:2},{value:"Example",id:"example",level:2},{value:"Transferring between systems",id:"transferring-between-systems",level:2}],p={toc:m},d="wrapper";function f(e){var t=e.components,n=(0,s.Z)(e,o);return(0,a.kt)(d,(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"transfers"},"Transfers"),(0,a.kt)("p",null,"The first feature you'll be interested in when dealing with XCM is being able to transfer assets\nbetween consensus systems. In the ",(0,a.kt)("a",{parentName:"p",href:"/docs/learn/xcm/quickstart-summary"},"quickstart")," chapter, we saw a simple\nXCM that when executed, would send assets between two accounts on the same consensus system. Now\nthat we've learnt the ",(0,a.kt)("a",{parentName:"p",href:"/docs/learn/xcm/fundamentals-summary"},"fundamentals"),", let's go over those same\ninstructions once again."),(0,a.kt)("h2",{id:"withdrawasset"},"WithdrawAsset"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-rust"},"WithdrawAsset(MultiAssets),\n")),(0,a.kt)("p",null,"This instruction is the most common way to get assets to the holding register of the XCVM. The\n",(0,a.kt)("inlineCode",{parentName:"p"},"MultiAssets")," in the operand will be stored in the holding register to be later used for other\ninstructions. As we've seen, we can use the expression ",(0,a.kt)("inlineCode",{parentName:"p"},"(Here, amount).into()")," to take a certain\n",(0,a.kt)("inlineCode",{parentName:"p"},"amount")," of the native token."),(0,a.kt)("h2",{id:"buyexecution"},"BuyExecution"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-rust"},"BuyExecution { fees: MultiAssets, weight_limit: WeightLimit },\n")),(0,a.kt)("p",null,"Because XCM is designed to be agnostic to the underlying consensus system, it doesn't have fee\npayment baked in. This instruction lets you pay for the execution of the XCM using the assets in the\nholding register. Most XCMs are not allowed to be executed (blocked by the\n",(0,a.kt)("a",{parentName:"p",href:"/docs/learn/xcm/config-deep-dive#barrier"},"barrier"),") if they don't contain this instruction as one of\nthe first ones to pay for all future ones."),(0,a.kt)("h2",{id:"depositasset"},"DepositAsset"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-rust"},"DepositAsset { assets: MultiAssetFilter, beneficiary: MultiLocation },\n")),(0,a.kt)("p",null,"This instruction will put assets from the holding register that match the\n",(0,a.kt)("a",{parentName:"p",href:"/docs/learn/xcm/fundamentals-multiasset#multiassetfilter"},"MultiAssetFilter")," into the ",(0,a.kt)("inlineCode",{parentName:"p"},"beneficiary"),". Note\nthat ",(0,a.kt)("inlineCode",{parentName:"p"},"beneficiary")," must be a location where the local consensus system can actually deposit assets\nto, e.g. it doesn't make sense to deposit assets to ",(0,a.kt)("inlineCode",{parentName:"p"},"../AccountId32(0x0)"),"."),(0,a.kt)("h2",{id:"example"},"Example"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-rust"},"let message = Xcm(vec![\n  WithdrawAsset((Here, amount).into()),\n  BuyExecution { fees: (Here, amount).into(), weight_limit: Unlimited },\n  DepositAsset {\n    assets: All.into(),\n    beneficiary: AccountId32 { id: ALICE.into(), network: None }.into()\n  },\n]);\n")),(0,a.kt)("p",null,"As we've seen, the above message results in withdrawing assets from the origin of the message,\npaying for execution and depositing the rest to another account on the same system. The full example\ncan be seen in ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/paritytech/xcm-docs/tree/main/examples"},"the repo"),"."),(0,a.kt)("h2",{id:"transferring-between-systems"},"Transferring between systems"),(0,a.kt)("p",null,"But what if you want to make a transfer from one system to another? There are two ways of doing\nthis:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Asset teleportation"),(0,a.kt)("li",{parentName:"ul"},"Reserve-backed transfers")),(0,a.kt)("p",null,"We'll be discussing both in the following chapters."))}f.isMDXComponent=!0}}]);