"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[6255],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>f});var o=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},s=Object.keys(e);for(o=0;o<s.length;o++)n=s[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(o=0;o<s.length;o++)n=s[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var c=o.createContext({}),l=function(e){var t=o.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},p=function(e){var t=l(e.components);return o.createElement(c.Provider,{value:t},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},d=o.forwardRef((function(e,t){var n=e.components,r=e.mdxType,s=e.originalType,c=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),u=l(n),d=r,f=u["".concat(c,".").concat(d)]||u[d]||m[d]||s;return n?o.createElement(f,a(a({ref:t},p),{},{components:n})):o.createElement(f,a({ref:t},p))}));function f(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var s=n.length,a=new Array(s);a[0]=d;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i[u]="string"==typeof e?e:r,a[1]=i;for(var l=2;l<s;l++)a[l]=n[l];return o.createElement.apply(null,a)}return o.createElement.apply(null,n)}d.displayName="MDXCreateElement"},94100:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>c,default:()=>f,frontMatter:()=>i,metadata:()=>l,toc:()=>u});var o=n(87462),r=n(63366),s=(n(67294),n(3905)),a=["components"],i={id:"learn-xcm-docs-overview-intro",title:"Introduction",sidebar_label:"Introduction",description:"An Introduction to XCM.",keywords:["xcm","cross-consensus messaging"],slug:"../overview-intro"},c="Introduction",l={unversionedId:"learn/xcm/overview/learn-xcm-docs-overview-intro",id:"learn/xcm/overview/learn-xcm-docs-overview-intro",title:"Introduction",description:"An Introduction to XCM.",source:"@site/../docs/learn/xcm/overview/intro.md",sourceDirName:"learn/xcm/overview",slug:"/learn/xcm/overview-intro",permalink:"/docs/learn/xcm/overview-intro",draft:!1,tags:[],version:"current",lastUpdatedBy:"Radha",lastUpdatedAt:1694074887,formattedLastUpdatedAt:"Sep 7, 2023",frontMatter:{id:"learn-xcm-docs-overview-intro",title:"Introduction",sidebar_label:"Introduction",description:"An Introduction to XCM.",keywords:["xcm","cross-consensus messaging"],slug:"../overview-intro"}},p={},u=[],m={toc:u},d="wrapper";function f(e){var t=e.components,n=(0,r.Z)(e,a);return(0,s.kt)(d,(0,o.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("h1",{id:"introduction"},"Introduction"),(0,s.kt)("p",null,"XCM is a ",(0,s.kt)("strong",{parentName:"p"},"language")," for communicating ",(0,s.kt)("strong",{parentName:"p"},"intentions")," between ",(0,s.kt)("strong",{parentName:"p"},"consensus systems"),". Concretely,\nXCM is a message format, it specifies how to craft messages that communicate intentions to other\nconsensus systems. Some examples of consensus systems are blockchains and smart contracts. XCM comes\nfrom the ",(0,s.kt)("a",{parentName:"p",href:"https://polkadot.network/"},"Polkadot")," ecosystem, but is designed to be general enough to\nprovide a common format for cross-consensus communication that can be used anywhere."),(0,s.kt)("p",null,"Its goal is to let blockchain ecosystems thrive via specialization instead of generalization. If\nthere's no interoperability, a chain is forced to host all services and support all functionalities\non its own. With XCM, we are able to achieve an ecosystem-wide division of labour: a chain can\nspecialize and focus on its own business logic, and leverage the benefits of depending on other\nspecialized blockchain for services that it does not provide."),(0,s.kt)("p",null,"XCM makes the following assumptions regarding the underlying environment:"),(0,s.kt)("ol",null,(0,s.kt)("li",{parentName:"ol"},"Asynchronous: XCMs in no way assume that the sender will be blocking on its completion."),(0,s.kt)("li",{parentName:"ol"},"Absolute: XCMs are assumed to be delivered and interpreted accurately, in order and in a timely\nfashion. Once a message is sent, one can assume that it will be processed as intended. This\nguarantee has to be provided by the transport layer."),(0,s.kt)("li",{parentName:"ol"},"Asymmetric: XCMs, by default, do not have results that let the sender know that the message was\nexecuted correctly. If results are needed, a new message must be sent."),(0,s.kt)("li",{parentName:"ol"},"Agnostic: XCM makes no assumptions about the nature of the consensus systems between which the\nmessages are being passed. XCM should be usable in any system that derives finality through\nconsensus.")),(0,s.kt)("p",null,"XCM is constantly evolving; the format is expected to change over time. It has an RFC process to\npropose changes, which end up in newer versions, the current one being v3. To keep up with the\ndevelopment of the format, or to propose changes, go to\n",(0,s.kt)("a",{parentName:"p",href:"https://github.com/paritytech/xcm-format"},"the XCM format repository"),"."))}f.isMDXComponent=!0}}]);