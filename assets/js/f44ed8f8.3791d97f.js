"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[7211],{3905:(e,n,t)=>{t.d(n,{Zo:()=>h,kt:()=>u});var a=t(67294);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function r(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function s(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?r(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function o(e,n){if(null==e)return{};var t,a,i=function(e,n){if(null==e)return{};var t,a,i={},r=Object.keys(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var l=a.createContext({}),c=function(e){var n=a.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):s(s({},n),e)),t},h=function(e){var n=c(e.components);return a.createElement(l.Provider,{value:n},e.children)},p="mdxType",m={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},d=a.forwardRef((function(e,n){var t=e.components,i=e.mdxType,r=e.originalType,l=e.parentName,h=o(e,["components","mdxType","originalType","parentName"]),p=c(t),d=i,u=p["".concat(l,".").concat(d)]||p[d]||m[d]||r;return t?a.createElement(u,s(s({ref:n},h),{},{components:t})):a.createElement(u,s({ref:n},h))}));function u(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var r=t.length,s=new Array(r);s[0]=d;var o={};for(var l in n)hasOwnProperty.call(n,l)&&(o[l]=n[l]);o.originalType=e,o[p]="string"==typeof e?e:i,s[1]=o;for(var c=2;c<r;c++)s[c]=t[c];return a.createElement.apply(null,s)}return a.createElement.apply(null,t)}d.displayName="MDXCreateElement"},71294:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>h,contentTitle:()=>l,default:()=>u,frontMatter:()=>o,metadata:()=>c,toc:()=>p});var a=t(87462),i=t(63366),r=(t(67294),t(3905)),s=["components"],o={id:"build-hrmp-channels",title:"Opening HRMP Channels",sidebar_label:"Opening HRMP Channels",description:"Steps on how to open HRMP channels between parachains.",keywords:["HRMP","parachain","statemint","proposal","asset hub","statemine"],slug:"../build-hrmp-channels"},l=void 0,c={unversionedId:"build/build-hrmp-channels",id:"build/build-hrmp-channels",title:"Opening HRMP Channels",description:"Steps on how to open HRMP channels between parachains.",source:"@site/../docs/build/build-hrmp-channels.md",sourceDirName:"build",slug:"/build-hrmp-channels",permalink:"/docs/build-hrmp-channels",draft:!1,tags:[],version:"current",lastUpdatedBy:"github-actions[bot]",lastUpdatedAt:1723443032,formattedLastUpdatedAt:"Aug 12, 2024",frontMatter:{id:"build-hrmp-channels",title:"Opening HRMP Channels",sidebar_label:"Opening HRMP Channels",description:"Steps on how to open HRMP channels between parachains.",keywords:["HRMP","parachain","statemint","proposal","asset hub","statemine"],slug:"../build-hrmp-channels"},sidebar:"docs",previous:{title:"Using AssetHub",permalink:"/docs/build-integrate-assets"},next:{title:"Tool Index",permalink:"/docs/build-tools-index"}},h={},p=[{value:"Opening HRMP Channels",id:"opening-hrmp-channels",level:2},{value:"Examples of HRMP Channel Management",id:"examples-of-hrmp-channel-management",level:3},{value:"Opening HRMP Channels with System Parachains",id:"opening-hrmp-channels-with-system-parachains",level:2},{value:"Opening HRMP Channels Between Two System Parachains",id:"opening-hrmp-channels-between-two-system-parachains",level:2}],m={toc:p},d="wrapper";function u(e){var n=e.components,o=(0,i.Z)(e,s);return(0,r.kt)(d,(0,a.Z)({},m,o,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"In order to communicate over ",(0,r.kt)("a",{parentName:"p",href:"/docs/learn-xcm-transport#hrmp-xcmp-lite"},"HRMP"),", parachains must\nestablish channels by registering them on the Relay Chain. Like\n",(0,r.kt)("a",{parentName:"p",href:"/docs/learn-xcm-transport#xcmp-cross-chain-message-passing"},"XCMP"),", HRMP is a message\ntransport protocol, but passes all messages via the Relay Chain. When XCMP is implemented on\nPolkadot, HRMP is planned to be deprecated and phased out."),(0,r.kt)("p",null,"HRMP channels are uni-directional. Bi-directional communication between two parachains will require\ntwo channels, one in each direction."),(0,r.kt)("h2",{id:"opening-hrmp-channels"},"Opening HRMP Channels"),(0,r.kt)("p",null,"Opening a channel between two parachains is a two-phase process, with one chain first initiating a\nchannel request and then the second chain accepting it. When neither chain is a\n",(0,r.kt)("a",{parentName:"p",href:"/docs/learn-system-chains"},"system chain"),", they will use the ",(0,r.kt)("inlineCode",{parentName:"p"},"hrmpInitOpenChannel")," and\n",(0,r.kt)("inlineCode",{parentName:"p"},"hrmpAcceptOpenChannel")," calls, respectively."),(0,r.kt)("p",null,"Each chain must dispatch the following calls on the Relay Chain from its parachain origin."),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"hrmp > hrmpInitOpenChannel(recipient, proposedMaxCapacity, proposedMaxMessageSize)"),": Initiates\nchannel establishment by creating a channel request with a given configuration. Note that the max\ncapacity and max message size must be within the ",(0,r.kt)("inlineCode",{parentName:"p"},"configuration"),"'s limits.")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"hrmp > hrmpAcceptOpenChannel(sender)"),": Accept the channel open request from the given sender."))),(0,r.kt)("p",null,"In order to dispatch a call from its sovereign origin, a parachain may use governance to send the\nencoded call in a ",(0,r.kt)("inlineCode",{parentName:"p"},"Transact")," instruction to the Relay Chain, but it may also execute this logic\nautonomously (e.g. on the notification that a channel was requested)."),(0,r.kt)("h3",{id:"examples-of-hrmp-channel-management"},"Examples of HRMP Channel Management"),(0,r.kt)("p",null,"There are several ways to trigger a specific message from a parachain's origin. The naive way is to\nwrite the program off-chain and submit it using the XCM pallet's ",(0,r.kt)("inlineCode",{parentName:"p"},"send")," extrinsic. Sending arbitrary\nprograms is gated by a privileged origin, so who can initiate that depends on each chain's\nconfiguration. The chain may need to go through governance to dispatch the extrinsic."),(0,r.kt)("p",null,"Another option is to write the programs that a chain will send ahead of time and incorporate them\ninto the runtime. These programs could be behind extrinsics with their own privileged origins, or\neven unprivileged origins. As the extrinsic can perform any checks prior to sending the message, the\nruntime developer can program things like allowing any signed origin to dispatch a call accepting an\nopen HRMP channel request with another parachain."),(0,r.kt)("p",null,"Note that this is actually how other extrinsics (e.g. to teleport assets) in the XCM pallet work;\nthey construct XCM programs locally from a user's inputs and, assuming all checks pass, send the\nprogram to the destination."),(0,r.kt)("p",null,"In addition, the logic could be autonomous and react to other instructions that the chain receives.\nFor example, see Polimec's\n",(0,r.kt)("a",{parentName:"p",href:"https://github.com/Polimec/polimec-node/blob/da9d1ee0062ead7a62f815647813ada48e4c2250/pallets/xcm-executor/src/lib.rs#L890"},"implementation"),"\nof the ",(0,r.kt)("inlineCode",{parentName:"p"},"XcmExecutor"),", which handles notifications of channel requests and acceptance."),(0,r.kt)("h2",{id:"opening-hrmp-channels-with-system-parachains"},"Opening HRMP Channels with System Parachains"),(0,r.kt)("p",null,"The\n",(0,r.kt)("a",{parentName:"p",href:"https://paritytech.github.io/polkadot-sdk/master/polkadot_runtime_parachains/hrmp/pallet/dispatchables/fn.establish_channel_with_system.html"},(0,r.kt)("inlineCode",{parentName:"a"},"establish_channel_with_system")),"\ncall can be used to establish a bi-directional channel between any parachain and a system chain.\nThis call needs to be dispatched from the parachain via an XCM program to execute on the Relay\nChain."),(0,r.kt)("p",null,"For instance, the call to be executed on the relay chain to establish a bi-directional channel\nbetween a parachain and the Asset Hub with ",(0,r.kt)("inlineCode",{parentName:"p"},"ParaID")," 1000 is ",(0,r.kt)("inlineCode",{parentName:"p"},"0x3c0ae8030000")),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"asset-hub-hrmp-channel",src:t(94013).Z,width:"2769",height:"695"})),(0,r.kt)("p",null,"Here is an example call with an XCM program sent from the parachain to Rococo relay chain to\nestablish channel a bi-directional channel with Rococo Asset Hub -\n",(0,r.kt)("inlineCode",{parentName:"p"},"0x0f001f000301000314000400000000070010a5d4e81300000000070010a5d4e80006000300c16678419c183c0ae8030000140d01000001003145")),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"asset-hub-hrmp-channel-xcm",src:t(95859).Z,width:"2836",height:"5618"})),(0,r.kt)("h2",{id:"opening-hrmp-channels-between-two-system-parachains"},"Opening HRMP Channels Between Two System Parachains"),(0,r.kt)("p",null,"As of Polkadot and Kusama runtimes 1,001,000, anyone can call an ",(0,r.kt)("inlineCode",{parentName:"p"},"establishSystemChannel")," extrinsic\nwith two system parachains as arguments in order to establish a channel from the given sender to\nreceiver."))}u.isMDXComponent=!0},95859:(e,n,t)=>{t.d(n,{Z:()=>a});const a=t.p+"assets/images/asset-hub-establish-channel-xcm-7bf33f4a7c1d8575795bc9ed9567551a.png"},94013:(e,n,t)=>{t.d(n,{Z:()=>a});const a=t.p+"assets/images/establish-channel-asset-hub-b2e50c86391cd9e45cbb685d3010169f.png"}}]);