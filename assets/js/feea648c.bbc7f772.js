"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[7061],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>d});var r=n(67294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var c=r.createContext({}),l=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=l(e.components);return r.createElement(c.Provider,{value:t},e.children)},p="mdxType",h={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,c=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),p=l(n),m=o,d=p["".concat(c,".").concat(m)]||p[m]||h[m]||a;return n?r.createElement(d,i(i({ref:t},u),{},{components:n})):r.createElement(d,i({ref:t},u))}));function d(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=m;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s[p]="string"==typeof e?e:o,i[1]=s;for(var l=2;l<a;l++)i[l]=n[l];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},39966:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>c,default:()=>d,frontMatter:()=>s,metadata:()=>l,toc:()=>p});var r=n(87462),o=n(63366),a=(n(67294),n(3905)),i=["components"],s={id:"learn-xcvm",title:"XCM Virtual Machine (XCVM) & XCM Executor",sidebar_label:"XCM Virtual Machine (XCVM)",description:"Learn about the design of the XCM executor, and how the XCM Virtual machine works.",keywords:["cross-consensus","XCM","XCMP","interoperability","communication"],slug:"../learn-xcvm"},c=void 0,l={unversionedId:"learn/learn-xcvm",id:"learn/learn-xcvm",title:"XCM Virtual Machine (XCVM) & XCM Executor",description:"Learn about the design of the XCM executor, and how the XCM Virtual machine works.",source:"@site/../docs/learn/learn-xcvm.md",sourceDirName:"learn",slug:"/learn-xcvm",permalink:"/docs/learn-xcvm",draft:!1,tags:[],version:"current",lastUpdatedBy:"bader y",lastUpdatedAt:1678551021,formattedLastUpdatedAt:"Mar 11, 2023",frontMatter:{id:"learn-xcvm",title:"XCM Virtual Machine (XCVM) & XCM Executor",sidebar_label:"XCM Virtual Machine (XCVM)",description:"Learn about the design of the XCM executor, and how the XCM Virtual machine works.",keywords:["cross-consensus","XCM","XCMP","interoperability","communication"],slug:"../learn-xcvm"}},u={},p=[],h={toc:p},m="wrapper";function d(e){var t=e.components,n=(0,o.Z)(e,i);return(0,a.kt)(m,(0,r.Z)({},h,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"At the core of XCM lies the Cross-Consensus Virtual Machine (XCVM). A \u201cmessage\u201d in XCM is an XCVM\nprogram. The XCVM is a state machine, state is kept track in Registers."),(0,a.kt)("p",null,"It\u2019s an ultra-high level non-Turing-complete computer whose instructions are designed to be roughly\nat the same level as transactions. Messages are one or more XCM instructions. The program executes\nuntil it either runs to the end or hits an error, at which point it finishes up and halts. An XCM\nexecutor following the XCVM specification is provided by Parity, and it can be extended or\ncustomized, or even ignored altogether and users can create their own construct that follows the\nXCVM spec."),(0,a.kt)("p",null,"A ",(0,a.kt)("em",{parentName:"p"},"message")," in XCM is simply just a programme that runs on the ",(0,a.kt)("inlineCode",{parentName:"p"},"XCVM"),": in other words, one or more\nXCM instructions. To learn more about the XCVM and the XCM Format, see the latest\n",(0,a.kt)("a",{parentName:"p",href:"https://medium.com/polkadot-network/xcm-the-cross-consensus-message-format-3b77b1373392"},"blog post"),"\nby Dr. Gavin Wood."),(0,a.kt)("p",null,"XCM instructions might change a register, they might change the state of the consensus system or\nboth."),(0,a.kt)("p",null,"One example of such an instruction would be ",(0,a.kt)("inlineCode",{parentName:"p"},"TransferAsset")," which is used to transfer an asset to\nsome other address on the remote system. It needs to be told which asset(s) to transfer and to\nwhom/where the asset is to be transferred."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"enum Instruction {\n    TransferAsset {\n        assets: MultiAssets,\n        beneficiary: MultiLocation,\n    }\n    /* snip */\n}\n")),(0,a.kt)("p",null,"A ",(0,a.kt)("inlineCode",{parentName:"p"},"MultiAsset")," is a general identifier for an asset. It may represent both fungible and non-fungible\nassets, and in the case of a fungible asset, it represents some defined amount of the asset."),(0,a.kt)("p",null,"A ",(0,a.kt)("inlineCode",{parentName:"p"},"MultiLocation"),' is a relative identifier, meaning that it can only be used to define the relative\npath between two locations, and cannot generally be used to refer to a location universally. Much\nlike a relative file-system path will first begin with any "../" components used to ascend into to\nthe containing directory, followed by the directory names into which to descend, a ',(0,a.kt)("inlineCode",{parentName:"p"},"MultiLocation"),"\nhas two main parts to it: the number of times to ascend into the outer consensus from the local and\nthen an interior location within that outer consensus."))}d.isMDXComponent=!0}}]);