"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[1914],{15680:(e,n,t)=>{t.d(n,{xA:()=>d,yg:()=>m});var r=t(96540);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var l=r.createContext({}),p=function(e){var n=r.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},d=function(e){var n=p(e.components);return r.createElement(l.Provider,{value:n},e.children)},c="mdxType",g={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},u=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),c=p(t),u=a,m=c["".concat(l,".").concat(u)]||c[u]||g[u]||o;return t?r.createElement(m,i(i({ref:n},d),{},{components:t})):r.createElement(m,i({ref:n},d))}));function m(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var o=t.length,i=new Array(o);i[0]=u;var s={};for(var l in n)hasOwnProperty.call(n,l)&&(s[l]=n[l]);s.originalType=e,s[c]="string"==typeof e?e:a,i[1]=s;for(var p=2;p<o;p++)i[p]=t[p];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}u.displayName="MDXCreateElement"},57324:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>l,default:()=>m,frontMatter:()=>s,metadata:()=>p,toc:()=>c});var r=t(58168),a=t(98587),o=(t(96540),t(15680)),i=["components"],s={id:"learn-snowbridge",title:"Snowbridge",sidebar_label:"Snowbridge",description:"Overview of Snowbridge by Snowfork",keywords:["Bridge","XCM","Bridge Hub","Snowbridge","Snowfork"],slug:"../learn-snowbridge"},l=void 0,p={unversionedId:"learn/learn-snowbridge",id:"learn/learn-snowbridge",title:"Snowbridge",description:"Overview of Snowbridge by Snowfork",source:"@site/../docs/learn/learn-snowbridge.md",sourceDirName:"learn",slug:"/learn-snowbridge",permalink:"/docs/learn-snowbridge",draft:!1,tags:[],version:"current",lastUpdatedBy:"Filippo",lastUpdatedAt:1725460864,formattedLastUpdatedAt:"Sep 4, 2024",frontMatter:{id:"learn-snowbridge",title:"Snowbridge",sidebar_label:"Snowbridge",description:"Overview of Snowbridge by Snowfork",keywords:["Bridge","XCM","Bridge Hub","Snowbridge","Snowfork"],slug:"../learn-snowbridge"}},d={},c=[{value:"Random-sampling BEEFY",id:"random-sampling-beefy",level:2},{value:"Snowbridge Crypto-economic Security",id:"snowbridge-crypto-economic-security",level:2},{value:"Snowbridge Assumptions",id:"snowbridge-assumptions",level:3},{value:"Resources",id:"resources",level:2}],g={toc:c},u="wrapper";function m(e){var n=e.components,t=(0,a.A)(e,i);return(0,o.yg)(u,(0,r.A)({},g,t,{components:n,mdxType:"MDXLayout"}),(0,o.yg)("admonition",{title:"Using Snowbridge",type:"info"},(0,o.yg)("p",{parentName:"admonition"},"Snowbridge can be accessed through ",(0,o.yg)("a",{parentName:"p",href:"https://app.snowbridge.network/"},"the web app"),", where you may\ntrack ",(0,o.yg)("a",{parentName:"p",href:"https://app.snowbridge.network/status"},"processing times of transactions"),",\n",(0,o.yg)("a",{parentName:"p",href:"https://app.snowbridge.network/history"},"recent transfers"),", and other information about the bridge's\noverall status.")),(0,o.yg)("p",null,"Snowbridge by ",(0,o.yg)("a",{parentName:"p",href:"https://snowfork.com/"},"Snowfork")," is a general-purpose, trustless bridge between\nPolkadot and Ethereum. It utilizes the\n",(0,o.yg)("a",{parentName:"p",href:"/docs/learn-system-chains#bridge-hub"},"Bridge Hub system parachain")," to establish a connection to its\nrelayers, allowing for permissionless and trustless messaging between Ethereum and Polkadot."),(0,o.yg)("p",null,"With Snowbridge, a sender can (but does not need to) run a\n",(0,o.yg)("a",{parentName:"p",href:"https://docs.snowbridge.network/architecture/relayers"},"relayer")," to ensure that their cross-chain\ntransaction is successful. A sender is a user using relayers provided by others."),(0,o.yg)("p",null,"Snowbridge currently supports\n",(0,o.yg)("a",{parentName:"p",href:"https://docs.snowbridge.network/applications/token-transfers"},"two-way token transfers")," between\nEthereum and Polkadot parachain."),(0,o.yg)("h2",{id:"random-sampling-beefy"},"Random-sampling BEEFY"),(0,o.yg)("p",null,"A trustless bridge always has a ",(0,o.yg)("strong",{parentName:"p"},"prover")," (needs to compute the proof), a ",(0,o.yg)("strong",{parentName:"p"},"verifier")," (asks the\nprover to compute the proof and verifies it), and relayers to relay messages. Snowbridge prover uses\n",(0,o.yg)("a",{parentName:"p",href:"/docs/learn-consensus#bridging-beefy"},"BEEFY"),", a novel bridge protocol drastically reducing\noperational costs without compromising security."),(0,o.yg)("p",null,"Even with simplifications ushered in by BEEFY, a smart contract updating Polkadot's state on\nEthereum has to perform 201 signature checks for every update since there are ~300 validators on\nPolkadot. This remains expensive (gas costs), especially as the validator set grows. The solution is\nrandom-sampling BEEFY that leverages\n",(0,o.yg)("a",{parentName:"p",href:"https://eth2book.info/capella/part2/building_blocks/randomness/"},"the RANDAO randomness beacon")," as\nfollows:"),(0,o.yg)("ul",null,(0,o.yg)("li",{parentName:"ul"},(0,o.yg)("strong",{parentName:"li"},"Commit:")," Relayer submits a state commitment of a recently finalized block on Polkadot and\nclaims to have a super-majority of validator\u2019s signatures to the light client deployed on\nEthereum. It also provides one validator signature backing the commitment, which can be slashed if\nneeded."),(0,o.yg)("li",{parentName:"ul"},(0,o.yg)("strong",{parentName:"li"},"Challenge:")," Light client queries on-chain randomness (RANDAO) to subsample ",(0,o.yg)("inlineCode",{parentName:"li"},"m")," (~25) signatures\nfrom the list Relayer\u2019s claimed list."),(0,o.yg)("li",{parentName:"ul"},(0,o.yg)("strong",{parentName:"li"},"Response:")," Relayer responds by sharing exactly those ",(0,o.yg)("inlineCode",{parentName:"li"},"m")," signatures that were randomly sampled\nwhich the light client then verifies. If everything checks out, the finalized block is accepted.")),(0,o.yg)("p",null,"The number of signature checks needed is significantly reduced and independent of the validator set\nsize, making the protocol more efficient. The number of subsampled signatures, ",(0,o.yg)("inlineCode",{parentName:"p"},"m,")," is the parameter\nthat trades off security and efficiency (i.e., ",(0,o.yg)("strong",{parentName:"p"},"security parameter"),"). The value of this parameter\nis derived using crypto-economic arguments."),(0,o.yg)("h2",{id:"snowbridge-crypto-economic-security"},"Snowbridge Crypto-economic Security"),(0,o.yg)("p",null,"If up to a third of the validators are malicious, the chance that all ",(0,o.yg)("inlineCode",{parentName:"p"},"m")," signatures subsampled are\nfrom these bad actors is ",(0,o.yg)("inlineCode",{parentName:"p"},"(1/2)^m")," (exponentially low). Any validator who supports a malicious\ncommitment ",(0,o.yg)("a",{parentName:"p",href:"/docs/learn-offenses"},"faces severe penalties"),". The expected value of an attack ",(0,o.yg)("inlineCode",{parentName:"p"},"E(A)")," is:"),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre"},"E(A) = p * V + (1 - p)*(-S)\n")),(0,o.yg)("p",null,"Where ",(0,o.yg)("inlineCode",{parentName:"p"},"V")," is the value of attack (bounded by market capitalization), ",(0,o.yg)("inlineCode",{parentName:"p"},"S")," is the validator slashable\nstake, and ",(0,o.yg)("inlineCode",{parentName:"p"},"p")," is the probability of a successful attack."),(0,o.yg)("h3",{id:"snowbridge-assumptions"},"Snowbridge Assumptions"),(0,o.yg)("p",null,"Snowbridge relies on two major assumptions:"),(0,o.yg)("ul",null,(0,o.yg)("li",{parentName:"ul"},(0,o.yg)("p",{parentName:"li"},"The crypto-economic assumption that an adversary is rational, i.e., an attack is launched only if\nthe expected value of an attack is positive. Hence, we derive our security parameter ",(0,o.yg)("inlineCode",{parentName:"p"},"m")," by\nensuring the expected value of an attack is negative, i.e., ",(0,o.yg)("inlineCode",{parentName:"p"},"E(A) < 0"),".")),(0,o.yg)("li",{parentName:"ul"},(0,o.yg)("p",{parentName:"li"},"RANDAO unpredictability. The Web3 Foundation research team performed a thorough analysis of RANDAO\nbias and extended the state-of-the-art in analysing the last-revealer attack on RANDAO. Assuming\n1/3rd of Ethereum validators are malicious, the effect of such bias is mitigated by proportionally\nincreasing the security parameter."))),(0,o.yg)("h2",{id:"resources"},"Resources"),(0,o.yg)("ul",null,(0,o.yg)("li",{parentName:"ul"},"Medium article\n",(0,o.yg)("a",{parentName:"li",href:"https://medium.com/@bhargav_22496/18a43a2cba9b"},'"Random Sampling BEEFY: Pillaring the trust-less Snowbridge"'),"\nby Bhargav Bhatt at Web3 Foundation"),(0,o.yg)("li",{parentName:"ul"},(0,o.yg)("a",{parentName:"li",href:"https://github.com/Snowfork/snowbridge"},"Snowbridge GitHub repository")),(0,o.yg)("li",{parentName:"ul"},"Web3 Foundation Research Repository")))}m.isMDXComponent=!0}}]);