"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[7714],{3905:(e,t,a)=>{a.d(t,{Zo:()=>p,kt:()=>m});var n=a(67294);function o(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function r(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){o(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function s(e,t){if(null==e)return{};var a,n,o=function(e,t){if(null==e)return{};var a,n,o={},i=Object.keys(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||(o[a]=e[a]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(o[a]=e[a])}return o}var l=n.createContext({}),c=function(e){var t=n.useContext(l),a=t;return e&&(a="function"==typeof e?e(t):r(r({},t),e)),a},p=function(e){var t=c(e.components);return n.createElement(l.Provider,{value:t},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},h=n.forwardRef((function(e,t){var a=e.components,o=e.mdxType,i=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),d=c(a),h=o,m=d["".concat(l,".").concat(h)]||d[h]||u[h]||i;return a?n.createElement(m,r(r({ref:t},p),{},{components:a})):n.createElement(m,r({ref:t},p))}));function m(e,t){var a=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=a.length,r=new Array(i);r[0]=h;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[d]="string"==typeof e?e:o,r[1]=s;for(var c=2;c<i;c++)r[c]=a[c];return n.createElement.apply(null,r)}return n.createElement.apply(null,a)}h.displayName="MDXCreateElement"},32876:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>p,contentTitle:()=>l,default:()=>m,frontMatter:()=>s,metadata:()=>c,toc:()=>d});var n=a(87462),o=a(63366),i=(a(67294),a(3905)),r=["components"],s={id:"polkadot-direction",title:"Polkadot Direction",sidebar_label:"Polkadot Direction",description:"Polkadot as a Decentralized and Secure Ubiquitous Computer.",keywords:["polkadot vision","decentralization","ubiquitous computer","coretime","blockspace","cores"],slug:"../polkadot-direction"},l=void 0,c={unversionedId:"general/polkadot-direction",id:"general/polkadot-direction",title:"Polkadot Direction",description:"Polkadot as a Decentralized and Secure Ubiquitous Computer.",source:"@site/../docs/general/polkadot-direction.md",sourceDirName:"general",slug:"/polkadot-direction",permalink:"/docs/polkadot-direction",draft:!1,tags:[],version:"current",lastUpdatedBy:"Radha",lastUpdatedAt:1709153768,formattedLastUpdatedAt:"Feb 28, 2024",frontMatter:{id:"polkadot-direction",title:"Polkadot Direction",sidebar_label:"Polkadot Direction",description:"Polkadot as a Decentralized and Secure Ubiquitous Computer.",keywords:["polkadot vision","decentralization","ubiquitous computer","coretime","blockspace","cores"],slug:"../polkadot-direction"},sidebar:"docs",previous:{title:"Polkadot 1.0",permalink:"/docs/polkadot-v1"},next:{title:"Stay Safe",permalink:"/docs/stay-safe-index"}},p={},d=[{value:"Polkadot as a Computational Resource",id:"polkadot-as-a-computational-resource",level:2},{value:"Summary",id:"summary",level:2},{value:"From Slot Auctions to Coretime Marketplace",id:"from-slot-auctions-to-coretime-marketplace",level:2},{value:"From Chain-centricity to Application-centricity",id:"from-chain-centricity-to-application-centricity",level:2},{value:"XCM and Accords",id:"xcm-and-accords",level:3},{value:"Core Usage in Polkadot 1.0",id:"core-usage-in-polkadot-10",level:2},{value:"Agile Coretime Allocation",id:"agile-coretime-allocation",level:2},{value:"Split Coretime",id:"split-coretime",level:3},{value:"Strided Coretime",id:"strided-coretime",level:3},{value:"Combined Coretime",id:"combined-coretime",level:3},{value:"Agile Core Usage",id:"agile-core-usage",level:2},{value:"Compressed Cores",id:"compressed-cores",level:3},{value:"Shared Cores",id:"shared-cores",level:3},{value:"Agile Composable Computer",id:"agile-composable-computer",level:2},{value:"Polkadot&#39;s Resilience",id:"polkadots-resilience",level:2}],u={toc:d},h="wrapper";function m(e){var t=e.components,s=(0,o.Z)(e,r);return(0,i.kt)(h,(0,n.Z)({},u,s,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("admonition",{type:"info"},(0,i.kt)("p",{parentName:"admonition"},"The material on this page is based on\n",(0,i.kt)("a",{parentName:"p",href:"https://www.youtube.com/watch?v=GIB1WeVuJD0"},"Gavin Wood's talk at Polkadot Decoded 2023"),".")),(0,i.kt)("p",null,"Understanding what ",(0,i.kt)("a",{parentName:"p",href:"/docs/polkadot-v1"},"Polkadot 1.0")," is about and the philosophy behind it will help\nus to envision the future direction of the Polkadot ecosystem toward abstraction and generalization."),(0,i.kt)("h2",{id:"polkadot-as-a-computational-resource"},"Polkadot as a Computational Resource"),(0,i.kt)("p",null,"Polkadot has been abstracted and generalized beyond what was originally proposed and envisioned in\nthe ",(0,i.kt)("a",{parentName:"p",href:"https://polkadot.network/whitepaper/"},"whitepaper"),". Polkadot is:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"About ",(0,i.kt)("a",{parentName:"li",href:"/docs/polkadot-v1#polkadots-blockspace"},(0,i.kt)("strong",{parentName:"a"},"Blockspace"))," (the underlying resources that\nchains need), not chains."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"A platform to build applications")," rather than chains and for people to use those applications.\nFundamentally, Polkadot is not a platform to host chains, and so far, chains happened to be one\nway to build applications and grow Polkadot's utility."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"A provider of resilient general-purpose continuation computation"),", where the term\n",(0,i.kt)("em",{parentName:"li"},"continuation")," refers to a broad, long-running task that can do something, pause, continue (or do\nsomething else) later."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"A multicore computer")," where chains that continuously operate in parallel on different cores are\ncalled ",(0,i.kt)("a",{parentName:"li",href:"/docs/learn-parachains"},"parachains"),". Currently, one core is reserved for one chain\nthrough ",(0,i.kt)("a",{parentName:"li",href:"/docs/learn-auction"},"slot auction mechanism"),", although one core can be reserved\non-demand to multiple chains at different periods (see\n",(0,i.kt)("a",{parentName:"li",href:"/docs/learn-parathreads"},"parathreads"),"). At the time of writing (mid 2023), there are around\n50 cores independently operating in parallel on Polkadot.")),(0,i.kt)("p",null,"From now on ",(0,i.kt)("em",{parentName:"p"},"application")," will be used as a general term to describe anything that can use a\nPolkadot core to access secure and decentralized computation."),(0,i.kt)("h2",{id:"summary"},"Summary"),(0,i.kt)("p",null,"If we see Polkadot as a service provider of trustless and resilient computation through cores as\nwell as secure interoperability between core-powered applications, the future development of\nPolkadot can be directed towards the following main changes."),(0,i.kt)("p",null,"A paradigm shift from:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"being a chain-focused ecosystem where each parachain owned an execution core at all times\n(acquired through fixed parachain slots), which allowed a simple and secure, sharded execution\nenvironment"),(0,i.kt)("li",{parentName:"ul"},"to being an application-focused ecosystem where we remove the assumption that each application\nowns a core, and instead that all cores are a resource to be consumed and used as needed by all\napplications.")),(0,i.kt)("p",null,"Previously, securing a parachain slot was a competitive process through an\n",(0,i.kt)("a",{parentName:"p",href:"/docs/learn-auction"},"auction mechanism"),". With coretime rental, there is no need for slot\nauctions anymore. Teams can purchase on-demand coretime or reserve bulk coretime as required. This\ngreatly decreases the barrier-to-entry for software tinkerers and parachain teams."),(0,i.kt)("p",null,"On top of those main changes, ",(0,i.kt)("a",{parentName:"p",href:"#agile-core-usage"},"agile core usage")," and\n",(0,i.kt)("a",{parentName:"p",href:"#agile-coretime-allocation"},"coretime allocation")," will allow any application to access Polkadot's\ncomputation based on their needs without wasting valuable blockspace. ",(0,i.kt)("a",{parentName:"p",href:"#xcm-and-accords"},"Accords"),"\nwill improve cross-chain communication and the security guarantees of XCM messages. Finally,\nPolkadot will scale by moving on-chain logic into its system parachains, allowing it to have more\nbandwidth for the ",(0,i.kt)("a",{parentName:"p",href:"/docs/learn-parachains-protocol"},"parachains protocol")," and accords."),(0,i.kt)("h2",{id:"from-slot-auctions-to-coretime-marketplace"},"From Slot Auctions to Coretime Marketplace"),(0,i.kt)("p",null,"The end product of blockchains is ",(0,i.kt)("a",{parentName:"p",href:"/docs/polkadot-v1#polkadots-blockspace"},(0,i.kt)("strong",{parentName:"a"},"Blockspace")),".\nApplications need to access Polkadot's blockspace, and the entry points to blockspace are the cores.\nThus, applications will need to reserve some time on cores or ",(0,i.kt)("strong",{parentName:"p"},"Coretime")," to gain the right to\naccess Polkadot's secure blockspace and interoperability for a finite period."),(0,i.kt)("p",null,"Cores must be agile and general: they can change what job they run as easily as a modern CPU. It\nfollows that the procurement of those cores must be agile as well."),(0,i.kt)("p",null,"The slot auction mechanism is not agile, creates high entry barriers, and is designed for\nlong-running single applications (i.e., the original Polkadot vision proposed in the whitepaper)."),(0,i.kt)("p",null,"We depart from the classic lease auctions and propose an agile marketplace for coretime, where\nessentially ",(0,i.kt)("strong",{parentName:"p"},"coretime becomes a commodity that can be tokenized, sold, and traded"),". This setup\nmaximizes the agility of Polkadot and lets the market figure out the best solution needed for\napplications to be successful."),(0,i.kt)("p",null,"Applications can reserve ",(0,i.kt)("strong",{parentName:"p"},"bulk coretime")," and ",(0,i.kt)("strong",{parentName:"p"},"on-demand coretime")," depending on their needs. Bulk\ncoretime rental will be a standard rental of coretime through a broker system parachain at a fixed\nprice for a fixed period of time. On-demand coretime rental will be available through ongoing sale\nof coretime for immediate use at a spot price. This system lowers the barrier to entry for\nprospective builders."),(0,i.kt)("p",null,"For example, revenues from coretime sales can be burnt, used to fund the Treasury, or used for a mix\nof those options. The topic is currently under discussion. For more information, see\n",(0,i.kt)("a",{parentName:"p",href:"https://github.com/polkadot-fellows/RFCs/pull/10"},"RFC-0010")," and\n",(0,i.kt)("a",{parentName:"p",href:"https://github.com/polkadot-fellows/RFCs/pull/17/files"},"RFC-0015"),"."),(0,i.kt)("h2",{id:"from-chain-centricity-to-application-centricity"},"From Chain-centricity to Application-centricity"),(0,i.kt)("p",null,"Polkadot 1.0 was a chain-centric paradigm consisting of isolated chains able to exchange messages.\nThis was not fundamentally different from having completely different chains connected to bridges,\nwith the only difference of having the relay-chain securing the network, providing message-passing\ncapability, and doing some extra tasks such as ",(0,i.kt)("a",{parentName:"p",href:"/docs/learn-crowdloans"},"crowdloans"),",\n",(0,i.kt)("a",{parentName:"p",href:"/docs/learn-auction"},"auctions"),", ",(0,i.kt)("a",{parentName:"p",href:"/docs/learn-staking"},"staking"),",\n",(0,i.kt)("a",{parentName:"p",href:"./learn-accounts-index"},"accounts"),", ",(0,i.kt)("a",{parentName:"p",href:"/docs/learn-transactions#balance-transfers"},"balances"),",\nand ",(0,i.kt)("a",{parentName:"p",href:"/docs/learn-polkadot-opengov"},"governance"),". Having a chain-centric system will ultimately\nend in chain-centric application and UX."),(0,i.kt)("p",null,"The true innovation of Polkadot is about leveraging the unique value proposition offered by\ndifferent chains and using those chains\u2019 collaborative potential to build inter-chain applications\nto solve real-world problems. Those applications will thus need to span across chains."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Increasingly fewer tasks will be handled by the relay-chain")," that will focus efforts only on\nprimary tasks: securing the network and providing secure message-passing capability.\n",(0,i.kt)("a",{parentName:"p",href:"/docs/learn-system-chains"},"System parachains")," will be used to take over secondary relay-chain\ntasks such as staking, governance, etc."),(0,i.kt)("h3",{id:"xcm-and-accords"},"XCM and Accords"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/docs/learn-xcm"},"XCMP")," is the transport layer for delivering XCM messages. It gives the\ntransportation method and a secure route but not a framework for binding agreements."),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/docs/learn-xcm-transport"},"XCM")," is a format, a language of intention abstract over\nfunctionality common within chains. It creates an expressive language of what you intend to do or\nwant to happen. XCM messages are transported between different chains using XCMP. Ideally, in a\nfully trustless environment, strong guarantees ensure chains faithfully interpret XCM messages. We\ncan have a secure mode of delivering messages that can be interpreted across protocols, but still\nmessages might be misinterpreted. These guarantees can be achieved with accords."),(0,i.kt)("p",null,"An ",(0,i.kt)("strong",{parentName:"p"},"Accord")," is an ",(0,i.kt)("em",{parentName:"p"},"opt-in")," treaty across many chains, where treaty logic cannot be changed or\nundermined by one or more of those chains, and Polkadot guarantees faithful execution of this logic.\nAccords will be specific to a particular function, and any chain that enters the accord will be held\nto it and will service that particular function. To lower the entry barrier, accords can be proposed\npermissionlessly, but because they are opt-in, the accord proposal will take effect until chains\nagree and sign up."),(0,i.kt)("p",null,"To sum up, accords ensure that the receiver faithfully interprets XCM messages securely sent via\nXCMP channels. Accords are the missing piece of the puzzle to achieve a fully trustless and\ncollaborative environment between applications."),(0,i.kt)("p",null,"Polkadot is the only ecosystem where accords can properly exist because it has a homogenous security\nlayer that provides a specific state transition function for each logic component. This allows\npatterns of cooperation between multiple logic components (i.e., trans-applications) that would not\nbe possible to achieve over bridges."),(0,i.kt)("p",null,"Accords will be implemented using ",(0,i.kt)("a",{parentName:"p",href:"/docs/learn-spree"},"SPREE technology"),"."),(0,i.kt)("h2",{id:"core-usage-in-polkadot-10"},"Core Usage in Polkadot 1.0"),(0,i.kt)("p",null,"In Polkadot 1.0, applications produced blocks at a fixed rate of 12 seconds, whether needed or not.\nThis led to inefficient energy allocation and economic incentives for producing full blocks under\nheavy traffic and empty blocks under light traffic."),(0,i.kt)("p",null,"The figure below shows the core usage for Polkadot 1.0, where the horizontal axis is time, and each\nrow represents a core. Colors show different parachains, each using one core (i.e., one parachain,\none core formula)."),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"core-usage-dumb",src:a(42030).Z,width:"1920",height:"800"})),(0,i.kt)("p",null,"The above setup allowed a ",(0,i.kt)("strong",{parentName:"p"},"simple and secure, sharded execution environment"),"."),(0,i.kt)("p",null,"However, to achieve full efficiency, blocks must be produced when needed, and the system must target\nfull block capacity, lowering the probability of incentivizing validators to build blocks half full\nor, worse, empty."),(0,i.kt)("h2",{id:"agile-coretime-allocation"},"Agile Coretime Allocation"),(0,i.kt)("p",null,"In Polkadot 1.0, coretime is a fixed two-year period on one specific core. Here, we remove this\nlimitation and generalize coretime usage to meet different application needs."),(0,i.kt)("h3",{id:"split-coretime"},"Split Coretime"),(0,i.kt)("p",null,"Owners of coretime can split or trade it. An application A1 can run on core C1 for a finite period\nand then another application A2 can run on that core, or application A1 can continue running on\nanother core C2. Some applications might stop running for some time and resume later on."),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"core-usage-agile-rangeSplit",src:a(4544).Z,width:"1920",height:"800"})),(0,i.kt)("h3",{id:"strided-coretime"},"Strided Coretime"),(0,i.kt)("p",null,"Ranges can be strided (i.e., applications can take turns on a core) to share costs or decrease block\nproduction rate, for example."),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"core-usage-agile-rangeStrided",src:a(87618).Z,width:"1920",height:"800"})),(0,i.kt)("h3",{id:"combined-coretime"},"Combined Coretime"),(0,i.kt)("p",null,"An application can be assigned to multiple cores simultaneously. Some applications can have a\npermanent core assignment and an intermittent one, for example, in a period of high demand to send\nmultiple blocks to multiple cores at the same time slot to reduce latency."),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"core-usage-agile-combined",src:a(7050).Z,width:"1920",height:"800"})),(0,i.kt)("h2",{id:"agile-core-usage"},"Agile Core Usage"),(0,i.kt)("p",null,"In Polkadot 1.0, one core is assigned to one application (in this case, equivalent to a parachain).\nIdeally, core affinity (i.e., which application operates on which core) is unimportant (see below).\nCores do not have any higher friendliness to one application than another."),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"core-usage-dumb-noAffinity",src:a(35791).Z,width:"1920",height:"800"})),(0,i.kt)("p",null,"Here, we remove the assumption that each application owns a core and instead that all cores are a\nresource to be consumed and used as needed by all applications in the ecosystem."),(0,i.kt)("h3",{id:"compressed-cores"},"Compressed Cores"),(0,i.kt)("p",null,"The same core can secure multiple blocks of the same application simultaneously. Combining multiple\napplication blocks in the same relay chain core will reduce latency at the expense of increased\nbandwidth for the fixed price of opening and closing a block."),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"core-usage-agile-compressed",src:a(18568).Z,width:"1920",height:"800"})),(0,i.kt)("h3",{id:"shared-cores"},"Shared Cores"),(0,i.kt)("p",null,"Sharing cores with other applications to share costs but with no reduction in latency. Note that\nthis is different from the ",(0,i.kt)("a",{parentName:"p",href:"#split-coretime"},"split coretime")," where one core is used by multiple\napplication at different times to share costs at the expense of higher latency."),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"core-usage-agile-shared",src:a(9224).Z,width:"1920",height:"800"})),(0,i.kt)("h2",{id:"agile-composable-computer"},"Agile Composable Computer"),(0,i.kt)("p",null,"All the above options of agile ",(0,i.kt)("a",{parentName:"p",href:"#agile-coretime-allocation"},"coretime allocation")," and\n",(0,i.kt)("a",{parentName:"p",href:"#agile-core-usage"},"core usage")," can be composable and enable the creation of an agile decentralized\nglobal computing system."),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"core-usage-agile-composable",src:a(2853).Z,width:"1920",height:"800"})),(0,i.kt)("p",null,"Thus, this new vision is focused on Polkadot\u2019s resource, which is secure, flexible, and available\nblockspace that can be accessed by reserving some time on a core. Agility in allocating coretime and\nusing cores allows for maximized network efficiency and blockspace usage."),(0,i.kt)("h2",{id:"polkadots-resilience"},"Polkadot's Resilience"),(0,i.kt)("p",null,"Systems that have yet to be engineered with decentralization, cryptography, and game theory in mind,\nare breakable and prone to cyber-attacks. Polkadot is basing its resilience on different pillars:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"Preponderance of light-client usage:")," Centralized RPC servers are common but susceptible to\nattack and not trustless decentralized entry points to using blockchain-based applications. Light\nclient usage on Polkadot is possible through\n",(0,i.kt)("a",{parentName:"li",href:"/docs/build-light-clients#how-to-use-substrate-connect"},"Smoldot"),"."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"Zero-Knowledge (ZK) Primitives:")," They can have a problematic effect on censorship and\ncentralization as having a big state transition function boiled down to a single proof of correct\nexecution is not currently a scaling solution to build resilient systems. However, a library of\nrichly featured and high-performance ZK primitives ready for specific use cases is being built.\nThe first use-case will be used to improve privacy for on-chain collectives such as\n",(0,i.kt)("a",{parentName:"li",href:"/docs/learn-polkadot-technical-fellowship"},"the Polkadot Technical Fellowship"),"."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},(0,i.kt)("a",{parentName:"strong",href:"/docs/learn-sassafras"},"Sassafras")," consensus:")," New forkless block-production consensus\nalgorithm replacing ",(0,i.kt)("a",{parentName:"li",href:"/docs/learn-consensus#block-production-babe"},"BABE")," and where block are\nnot produced unless they are expected to be finalized. This will provide several benefits, such\nas:",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Improved security, parachain performance, and UX from being forkless"),(0,i.kt)("li",{parentName:"ul"},"Preventing front-running attacks through high-performance transaction routing where transactions\nare included in blocks in one hop instead of being gossiped, and transaction encryption."))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"Internode Mixnet:")," Shielded transport for short messages that",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"avoids leaking IP information for transactions, and"),(0,i.kt)("li",{parentName:"ul"},"introduces a general messaging system allowing users, chains and off-chain workers, smart\ncontracts, pallets, and anything else existing within a chain to exchange messages containing\nsignatures, intentions, etc."))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"Social Decentralization:")," Resilience is achieved by including many participants contributing to\nthe system and coming to decisions through on-chain governance. Involving as many people as\npossible ensures resilience against spending becoming systemically misjudged and appropriately\ndirects wealth for spending treasury funds, salaries, and grants. Another crucial way of\ndecentralizing the network is ensuring experts on which the maintenance of the system relies upon\nare incentivized and recruited over time by the Polkadot network and not by organizations within\nthe Polkadot ecosystem.")))}m.isMDXComponent=!0},7050:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/core-usage-agile-combined-4ef969fb72931430cf067bccc10c1a73.png"},2853:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/core-usage-agile-composable-ee626ebd055fdf3bbd6d88d70bc2c110.png"},18568:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/core-usage-agile-compressed-db4821b411e6f4be0c12167d89ee022e.png"},4544:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/core-usage-agile-rangeSplit-d8511cbb8658052ac0a639bd6a722982.png"},87618:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/core-usage-agile-rangeStrided-605254487f94721806beca92707cfaf3.png"},9224:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/core-usage-agile-shared-f395560cce9a4fd4976c5259ce8c67c4.png"},35791:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/core-usage-dumb-noAffinity-8d86655d36adc7c8de32114821a1764a.png"},42030:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/core-usage-dumb-6419ee60a3606e10d89a1c91dbf24e20.png"}}]);