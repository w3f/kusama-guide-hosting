"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[2813],{3905:(e,t,a)=>{a.d(t,{Zo:()=>u,kt:()=>c});var n=a(67294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function s(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?s(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):s(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},s=Object.keys(e);for(n=0;n<s.length;n++)a=s[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(n=0;n<s.length;n++)a=s[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var i=n.createContext({}),d=function(e){var t=n.useContext(i),a=t;return e&&(a="function"==typeof e?e(t):l(l({},t),e)),a},u=function(e){var t=d(e.components);return n.createElement(i.Provider,{value:t},e.children)},p="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},h=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,s=e.originalType,i=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),p=d(a),h=r,c=p["".concat(i,".").concat(h)]||p[h]||m[h]||s;return a?n.createElement(c,l(l({ref:t},u),{},{components:a})):n.createElement(c,l({ref:t},u))}));function c(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var s=a.length,l=new Array(s);l[0]=h;var o={};for(var i in t)hasOwnProperty.call(t,i)&&(o[i]=t[i]);o.originalType=e,o[p]="string"==typeof e?e:r,l[1]=o;for(var d=2;d<s;d++)l[d]=a[d];return n.createElement.apply(null,l)}return n.createElement.apply(null,a)}h.displayName="MDXCreateElement"},53143:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>u,contentTitle:()=>i,default:()=>c,frontMatter:()=>o,metadata:()=>d,toc:()=>p});var n=a(87462),r=a(63366),s=(a(67294),a(3905)),l=["components"],o={id:"stellaswap-dashboards",title:"Stellaswap Dashboards",sidebar_label:"Stellaswap (Moonbeam)",description:"Stellaswap is the leading DEX on Moonbeam.",keywords:["polkadot","dashboard","dune","stellaswap","DeFi","moonbeam"],slug:"../stellaswap-dashboards"},i="Stellaswap Dashboards",d={unversionedId:"general/dune-analytics/parachain-dashboards/stellaswap-dashboards",id:"general/dune-analytics/parachain-dashboards/stellaswap-dashboards",title:"Stellaswap Dashboards",description:"Stellaswap is the leading DEX on Moonbeam.",source:"@site/../docs/general/dune-analytics/parachain-dashboards/stellaswap-dashboards.md",sourceDirName:"general/dune-analytics/parachain-dashboards",slug:"/general/dune-analytics/stellaswap-dashboards",permalink:"/docs/general/dune-analytics/stellaswap-dashboards",draft:!1,tags:[],version:"current",lastUpdatedBy:"MK",lastUpdatedAt:1717658873,formattedLastUpdatedAt:"Jun 6, 2024",frontMatter:{id:"stellaswap-dashboards",title:"Stellaswap Dashboards",sidebar_label:"Stellaswap (Moonbeam)",description:"Stellaswap is the leading DEX on Moonbeam.",keywords:["polkadot","dashboard","dune","stellaswap","DeFi","moonbeam"],slug:"../stellaswap-dashboards"}},u={},p=[{value:"Overview",id:"overview",level:2},{value:"Featured Dashboards on Dune",id:"featured-dashboards-on-dune",level:2},{value:"Key Tables",id:"key-tables",level:2},{value:"Useful Queries",id:"useful-queries",level:2},{value:"Getting Started with Queries",id:"getting-started-with-queries",level:2}],m={toc:p},h="wrapper";function c(e){var t=e.components,a=(0,r.Z)(e,l);return(0,s.kt)(h,(0,n.Z)({},m,a,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("h1",{id:"stellaswap-dashboards"},"Stellaswap Dashboards"),(0,s.kt)("h2",{id:"overview"},"Overview"),(0,s.kt)("p",null,"Stellaswap is the leading DEX on Moonbeam, no matter whether you measure by volume, number of pools,\nor accounts using it. It also offers liquid staking for DOT."),(0,s.kt)("p",null,"Users can swap from any asset to any other asset using an automated router that will calculate the\nmost efficient path."),(0,s.kt)("p",null,"Liquidity providers can earn fees from the trades in the pools they provide liquidity to."),(0,s.kt)("h2",{id:"featured-dashboards-on-dune"},"Featured Dashboards on Dune"),(0,s.kt)("p",null,"Here you'll find a variety of dashboards that help visualize data from StellaSwap:"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",{parentName:"li",href:"https://dune.com/substrate/stellaswap"},"stellaswap on Polkadot"),": This dashboard provides a\ncomprehensive view of DEX volumes and liquidity on StellaSwap.")),(0,s.kt)("h2",{id:"key-tables"},"Key Tables"),(0,s.kt)("p",null,"Data from the stellaswap DEX comes directly from substrate moonbeam tables: ",(0,s.kt)("inlineCode",{parentName:"p"},"moonbeam.events")),(0,s.kt)("h2",{id:"useful-queries"},"Useful Queries"),(0,s.kt)("p",null,"Some of the most important queries for Hydration are made available as materialized views."),(0,s.kt)("table",null,(0,s.kt)("thead",{parentName:"table"},(0,s.kt)("tr",{parentName:"thead"},(0,s.kt)("th",{parentName:"tr",align:null},"Subject Area"),(0,s.kt)("th",{parentName:"tr",align:null},"Query"),(0,s.kt)("th",{parentName:"tr",align:null},"Materialized View"),(0,s.kt)("th",{parentName:"tr",align:null},"Description"))),(0,s.kt)("tbody",{parentName:"table"},(0,s.kt)("tr",{parentName:"tbody"},(0,s.kt)("td",{parentName:"tr",align:null},"Stellaswap V3 Trades"),(0,s.kt)("td",{parentName:"tr",align:null},(0,s.kt)("a",{parentName:"td",href:"https://dune.com/queries/3661633"},"query_3661633")),(0,s.kt)("td",{parentName:"tr",align:null},(0,s.kt)("inlineCode",{parentName:"td"},"dune.substrate.result_stellaswap_v_3_trades")),(0,s.kt)("td",{parentName:"tr",align:null},"Trades in V3 pools, similar to dex.trades format.")),(0,s.kt)("tr",{parentName:"tbody"},(0,s.kt)("td",{parentName:"tr",align:null},"Stellaswap V3 Trades (alt)"),(0,s.kt)("td",{parentName:"tr",align:null},(0,s.kt)("a",{parentName:"td",href:"https://dune.com/queries/3646057"},"query_3646057")),(0,s.kt)("td",{parentName:"tr",align:null},(0,s.kt)("inlineCode",{parentName:"td"},"dune.substrate.result_stellaswap_v3_trades")),(0,s.kt)("td",{parentName:"tr",align:null},"Trades in V3 pools, suitable for volume and price analysis")),(0,s.kt)("tr",{parentName:"tbody"},(0,s.kt)("td",{parentName:"tr",align:null},"V3 Trades Enriched"),(0,s.kt)("td",{parentName:"tr",align:null},(0,s.kt)("a",{parentName:"td",href:"https://dune.com/queries/3656957"},"query_3656957")),(0,s.kt)("td",{parentName:"tr",align:null},(0,s.kt)("inlineCode",{parentName:"td"},"dune.substrate.result_stellaswap_trades_enriched")),(0,s.kt)("td",{parentName:"tr",align:null},"Trades in V3 pools, with USD equivalent prices.")),(0,s.kt)("tr",{parentName:"tbody"},(0,s.kt)("td",{parentName:"tr",align:null},"Stellaswap V3 Pools"),(0,s.kt)("td",{parentName:"tr",align:null},(0,s.kt)("a",{parentName:"td",href:"https://dune.com/queries/3639606"},"query_3639606")),(0,s.kt)("td",{parentName:"tr",align:null},(0,s.kt)("inlineCode",{parentName:"td"},"dune.substrate.dataset_stella_pools")," (dataset)"),(0,s.kt)("td",{parentName:"tr",align:null},"Master data for the pools")))),(0,s.kt)("p",null,"The three queries presented are all very similar, but they are optimized for different use cases."),(0,s.kt)("p",null,'Each trade will provide a token0 and token1, which are the two tokens traded. The order depends on\nthe order in the pool definition (see V3 pools query). Example: for the pool WGLMR-xcDOT, WGLMR is\ntoken0 and xcDOT is token1. Whether someone was buying or selling GLMR can be seen by the sign of\namount0. Positive means "selling", negative means "buying". Only one of the first of the three\nqueries above sorts the tokens into the right order.'),(0,s.kt)("p",null,"The other queries keep token0 and token1 in the order in which they appear in the raw data, which\nalso makes it easier to aggregate for the price and volume."),(0,s.kt)("p",null,"Pool master data is currently provided as a dataset directly, rather than parsed from events or from\na snapshot. This means the latest pools added may not be included in the dataset. (Remains a work in\nprogress.)"),(0,s.kt)("p",null,"Dune users are encouraged to study the source code of the queries, including parts of a query that\nmay have been commented out for future use."),(0,s.kt)("p",null,"Uncommenting these parts may accelerate your effort of adopting a query to a slightly different use\ncase."),(0,s.kt)("h2",{id:"getting-started-with-queries"},"Getting Started with Queries"),(0,s.kt)("p",null,"To get started with querying data from Stellaswap, you are welcome to use the mentioned materialized\nqueries. You can also use the following DuneSQL queries as examples:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-sql",metastring:'title="Stellaswap Volume Last Day" showLineNumbers',title:'"Stellaswap',Volume:!0,Last:!0,'Day"':!0,showLineNumbers:!0},"WITH maxts as(\n    select max(DATE_TRUNC('day', block_time)) as maxts from dune.substrate.result_stellaswap_trades_enriched T\n)\nSELECT\nDATE_TRUNC('day', block_time) as date,\nT.token_pair,\nproject_contract_address,\ncurrent_timestamp - max(block_time) as last_seen_ago,\nround(sum(abs(amount_usd))) as volume_usd,\nT.subquery\nFROM dune.substrate.result_stellaswap_trades_enriched T\nWHERE DATE_TRUNC('day', block_time) = (select maxts from maxts)\nGROUP BY 1, 2, 3, 6\nORDER BY 1 DESC, 5 DESC\n\n\n")),(0,s.kt)("p",null,"The query calculates the last available day's volume for each token pair. It also shows which pair\nwas used to calculate the USD value of the tokens involved. For example, if you trade a pair which\ncontains USDC or USDT, the dollar value of the trade is just the amount of USDC or USDT traded. For\nother pairs, the USD value is calculated using another currency as an intermediate, i.e. DOT or\nGLMR. Any pair which does not at least have one of these currencies will not have a USD value\ncalculated."),(0,s.kt)("p",null,"Query result:"),(0,s.kt)("iframe",{src:"https://dune.com/embeds/3676341/6183229/",height:"350",width:"100%"}),(0,s.kt)("admonition",{title:"DuneSQL Reference",type:"info"},(0,s.kt)("p",{parentName:"admonition"},"For more information on DuneSQL, please refer to the ",(0,s.kt)("a",{parentName:"p",href:"/docs/general/dunesql-cheatsheet"},"DuneSQL Cheatsheet"),"\nand\n",(0,s.kt)("a",{parentName:"p",href:"https://docs.dune.com/query-engine/Functions-and-operators/index"},"DuneSQL Official Documentation"),".")))}c.isMDXComponent=!0}}]);